#########################################################################
# Title:         Sandbox: Sanity Check | Tags Check                     #
# Author(s):     desimaniac, salty                                      #
# URL:           https://github.com/saltyorg/Sandbox                    #
# --                                                                    #
#########################################################################
#                   GNU General Public License v3.0                     #
#########################################################################
---
- name: Ansible Tags | Check if cache file exists
  ansible.builtin.stat:
    path: /srv/git/sb/cache.json
  register: cache_file_stat

- name: Ansible Tags | Load tags from cache if available
  ansible.builtin.set_fact:
    loaded_tags: "{{ (lookup('file', '/srv/git/sb/cache.json') | from_json)['/opt/sandbox']['tags'] | default([]) + sanity_check_ansible_tags_extra }}"
  when: cache_file_stat.stat.exists and (sanity_check_use_cache | bool)

- name: Ansible Tags | Get all available Ansible tags if cache is not available
  ansible.builtin.shell: |
    ansible-playbook sandbox.yml --list-tags 2>&1 | grep "TASK TAGS" \
      | cut -d":" -f2 | awk '{sub(/\[/, "")sub(/\]/, "")}1' | sed -e 's/,//g' | xargs -n 1 | sort -u
  register: available_ansible_tags
  changed_when: false
  when: (loaded_tags is defined and ((loaded_tags | length) == (sanity_check_ansible_tags_extra | length))) or loaded_tags is undefined

- name: Ansible Tags | Set loaded tags from command if cache is not available
  ansible.builtin.set_fact:
    loaded_tags: "{{ available_ansible_tags.stdout_lines }}"
  when: (loaded_tags is defined and ((loaded_tags | length) == (sanity_check_ansible_tags_extra | length))) or loaded_tags is undefined

- name: Ansible Tags | Ensure valid Ansible tag(s) were provided
  ansible.builtin.assert:
    that:
      - item in loaded_tags
    msg: "You must supply valid tags."
    quiet: true
  with_items: "{{ ansible_run_tags }}"
