##########################################################################
# Title:         Sandbox: Whisparr | Default Variables                   #
# Author(s):     salty                                                   #
# URL:           https://github.com/saltyorg/Sandbox                     #
# --                                                                     #
##########################################################################
#                   GNU General Public License v3.0                      #
##########################################################################
---
################################
# Basics
################################

whisparr_instances: ["whisparr"]

################################
# Paths
################################

whisparr_paths_folder: "{{ whisparr_name }}"
whisparr_paths_location: "{{ server_appdata_path }}/{{ whisparr_paths_folder }}"
whisparr_paths_folders_list:
  - "{{ whisparr_paths_location }}"
whisparr_paths_config_location: "{{ whisparr_paths_location }}/config.xml"

################################
# Web
################################

whisparr_web_subdomain: "{{ whisparr_name }}"
whisparr_web_domain: "{{ user.domain }}"
whisparr_web_port: "6969"
whisparr_web_url: "{{ 'https://' + lookup('vars', whisparr_name + '_web_subdomain', default=whisparr_web_subdomain)
                      + '.' + lookup('vars', whisparr_name + '_web_domain', default=whisparr_web_domain)
                   if (reverse_proxy_is_enabled)
                   else 'http://localhost:' + lookup('vars', whisparr_name + '_web_port', default=whisparr_web_port) }}"

################################
# DNS
################################

whisparr_dns_record: "{{ lookup('vars', whisparr_name + '_web_subdomain', default=whisparr_web_subdomain) }}"
whisparr_dns_zone: "{{ lookup('vars', whisparr_name + '_web_domain', default=whisparr_web_domain) }}"
whisparr_dns_proxy: "{{ dns.proxied }}"

################################
# Traefik
################################

whisparr_traefik_sso_middleware: "{{ traefik_default_sso_middleware }}"

whisparr_traefik_middleware_default: "{{ traefik_default_middleware + ','
                                         + lookup('vars', whisparr_name + '_traefik_sso_middleware', default=whisparr_traefik_sso_middleware)
                                      if (lookup('vars', whisparr_name + '_traefik_sso_middleware', default=whisparr_traefik_sso_middleware) | length > 0)
                                      else traefik_default_middleware }}"
whisparr_traefik_middleware_custom: ""
whisparr_traefik_middleware: "{{ whisparr_traefik_middleware_default + ','
                                 + whisparr_traefik_middleware_custom
                              if (not whisparr_traefik_middleware_custom.startswith(',') and whisparr_traefik_middleware_custom | length > 0)
                              else whisparr_traefik_middleware_default
                                 + whisparr_traefik_middleware_custom }}"

whisparr_traefik_certresolver: "{{ traefik_default_certresolver }}"
whisparr_traefik_enabled: true
whisparr_traefik_api_enabled: true
whisparr_traefik_api_endpoint: "`/api`"

################################
# API
################################

# default to blank
whisparr_api_key:

################################
# Docker
################################

# Container
whisparr_docker_container: "{{ whisparr_name }}"

# Image
whisparr_docker_image_pull: true
whisparr_docker_image_repo: "cr.hotio.dev/hotio/whisparr"
whisparr_docker_image_tag: "nightly"
whisparr_docker_image: "{{ lookup('vars', whisparr_name + '_docker_image_repo', default=whisparr_docker_image_repo)
                           + ':' + lookup('vars', whisparr_name + '_docker_image_tag', default=whisparr_docker_image_tag) }}"

# Ports
whisparr_docker_ports_defaults: []
whisparr_docker_ports_ui:
  - "{{ lookup('vars', whisparr_name + '_web_port', default=whisparr_web_port) }}:{{ lookup('vars', whisparr_name + '_web_port', default=whisparr_web_port) }}"
whisparr_docker_ports_custom: []
whisparr_docker_ports: "{{ lookup('vars', whisparr_name + '_docker_ports_defaults', default=whisparr_docker_ports_defaults)
                           + lookup('vars', whisparr_name + '_docker_ports_ui', default=whisparr_docker_ports_ui)
                           + lookup('vars', whisparr_name + '_docker_ports_custom', default=whisparr_docker_ports_custom)
                        if (not reverse_proxy_is_enabled)
                        else lookup('vars', whisparr_name + '_docker_ports_defaults', default=whisparr_docker_ports_defaults)
                           + lookup('vars', whisparr_name + '_docker_ports_custom', default=whisparr_docker_ports_custom) }}"

# Envs
whisparr_docker_envs_default:
  PUID: "{{ uid }}"
  PGID: "{{ gid }}"
  UMASK: "002"
  TZ: "{{ tz }}"
whisparr_docker_envs_custom: {}
whisparr_docker_envs: "{{ lookup('vars', whisparr_name + '_docker_envs_default', default=whisparr_docker_envs_default)
                          | combine(lookup('vars', whisparr_name + '_docker_envs_custom', default=whisparr_docker_envs_custom)) }}"

# Commands
whisparr_docker_commands_default: []
whisparr_docker_commands_custom: []
whisparr_docker_commands: "{{ lookup('vars', whisparr_name + '_docker_commands_default', default=whisparr_docker_commands_default)
                              + lookup('vars', whisparr_name + '_docker_docker_commands_custom', default=whisparr_docker_commands_custom) }}"

# Volumes
whisparr_docker_volumes_default:
  - "{{ whisparr_paths_location }}:/config"
  - "{{ server_appdata_path }}/scripts:/scripts"
whisparr_docker_volumes_custom: []
whisparr_docker_volumes: "{{ lookup('vars', whisparr_name + '_docker_volumes_default', default=whisparr_docker_volumes_default)
                             + lookup('vars', whisparr_name + '_docker_volumes_custom', default=whisparr_docker_volumes_custom) }}"

# Devices
whisparr_docker_devices_default: []
whisparr_docker_devices_custom: []
whisparr_docker_devices: "{{ lookup('vars', whisparr_name + '_docker_devices_default', default=whisparr_docker_devices_default)
                             + lookup('vars', whisparr_name + '_docker_devices_custom', default=whisparr_docker_devices_custom) }}"

# Hosts
whisparr_docker_hosts_default: []
whisparr_docker_hosts_custom: []
whisparr_docker_hosts: "{{ docker_hosts_common
                           | combine(lookup('vars', whisparr_name + '_docker_hosts_default', default=whisparr_docker_hosts_default))
                           | combine(lookup('vars', whisparr_name + '_docker_hosts_custom', default=whisparr_docker_hosts_custom)) }}"

# Labels
whisparr_docker_labels_default: {}
whisparr_docker_labels_custom: {}
whisparr_docker_labels: "{{ docker_labels_common
                            | combine(lookup('vars', whisparr_name + '_docker_labels_default', default=whisparr_docker_labels_default))
                            | combine(lookup('vars', whisparr_name + '_docker_labels_custom', default=whisparr_docker_labels_custom)) }}"

# Hostname
whisparr_docker_hostname: "{{ whisparr_name }}"

# Networks
whisparr_docker_networks_alias: "{{ whisparr_name }}"
whisparr_docker_networks_default: []
whisparr_docker_networks_custom: []
whisparr_docker_networks: "{{ docker_networks_common
                              + lookup('vars', whisparr_name + '_docker_networks_default', default=whisparr_docker_networks_default)
                              + lookup('vars', whisparr_name + '_docker_networks_custom', default=whisparr_docker_networks_custom) }}"

# Capabilities
whisparr_docker_capabilities_default: []
whisparr_docker_capabilities_custom: []
whisparr_docker_capabilities: "{{ lookup('vars', whisparr_name + '_docker_capabilities_default', default=whisparr_docker_capabilities_default)
                                  + lookup('vars', whisparr_name + '_docker_capabilities_custom', default=whisparr_docker_capabilities_custom) }}"

# Security Opts
whisparr_docker_security_opts_default: []
whisparr_docker_security_opts_custom: []
whisparr_docker_security_opts: "{{ lookup('vars', whisparr_name + '_docker_security_opts_default', default=whisparr_docker_security_opts_default)
                                   + lookup('vars', whisparr_name + '_docker_security_opts_custom', default=whisparr_docker_security_opts_custom) }}"

# Restart Policy
whisparr_docker_restart_policy: unless-stopped

# State
whisparr_docker_state: started
