##########################################################################
# Title:         Sandbox: Requestrr | Default Variables                  #
# Author(s):     nostyle, TABLE272, salty                                #
# URL:           https://github.com/saltyorg/Sandbox                     #
# --                                                                     #
##########################################################################
#                   GNU General Public License v3.0                      #
##########################################################################
---
################################
# Basics
################################

requestrr_instances: ["requestrr"]

################################
# Paths
################################

requestrr_role_paths_folder: "{{ requestrr_name }}"
requestrr_role_paths_location: "{{ server_appdata_path }}/{{ requestrr_role_paths_folder }}"
requestrr_role_paths_folders_list:
  - "{{ requestrr_role_paths_location }}"

################################
# Web
################################

requestrr_role_web_subdomain: "{{ requestrr_name }}"
requestrr_role_web_domain: "{{ user.domain }}"
requestrr_role_web_port: "4545"
requestrr_role_web_url: "{{ 'https://' + (lookup('role_var', '_web_subdomain', role='requestrr') + '.' + lookup('role_var', '_web_domain', role='requestrr')
                         if (lookup('role_var', '_web_subdomain', role='requestrr') | length > 0)
                         else lookup('role_var', '_web_domain', role='requestrr')) }}"

################################
# DNS
################################

requestrr_role_dns_record: "{{ lookup('role_var', '_web_subdomain', role='requestrr') }}"
requestrr_role_dns_zone: "{{ lookup('role_var', '_web_domain', role='requestrr') }}"
requestrr_role_dns_proxy: "{{ dns_proxied }}"

################################
# Traefik
################################

requestrr_role_traefik_sso_middleware: "{{ traefik_default_sso_middleware }}"
requestrr_role_traefik_middleware_default: "{{ traefik_default_middleware }}"
requestrr_role_traefik_middleware_custom: ""
requestrr_role_traefik_certresolver: "{{ traefik_default_certresolver }}"
requestrr_role_traefik_enabled: true
requestrr_role_traefik_api_enabled: false
requestrr_role_traefik_api_endpoint: ""

################################
# Docker
################################

# Container
requestrr_role_docker_container: "{{ requestrr_name }}"

# Image
requestrr_role_docker_image_pull: true
requestrr_role_docker_image_repo: "thomst08/requestrr"
requestrr_role_docker_image_tag: "latest"
requestrr_role_docker_image: "{{ lookup('role_var', '_docker_image_repo', role='requestrr') }}:{{ lookup('role_var', '_docker_image_tag', role='requestrr') }}"

# Envs
requestrr_role_docker_envs_default:
  TZ: "{{ tz }}"
  PUID: "{{ uid }}"
  PGID: "{{ gid }}"
  UMASK: "002"
requestrr_role_docker_envs_custom: {}
requestrr_role_docker_envs: "{{ lookup('role_var', '_docker_envs_default', role='requestrr')
                                | combine(lookup('role_var', '_docker_envs_custom', role='requestrr')) }}"

# Volumes
requestrr_role_docker_volumes_default:
  - "{{ lookup('role_var', '_paths_location', role='requestrr') }}:/root/config"
requestrr_role_docker_volumes_custom: []
requestrr_role_docker_volumes: "{{ lookup('role_var', '_docker_volumes_default', role='requestrr')
                                   + lookup('role_var', '_docker_volumes_custom', role='requestrr') }}"

# Hostname
requestrr_role_docker_hostname: "{{ requestrr_name }}"

# Networks
requestrr_role_docker_networks_alias: "{{ requestrr_name }}"
requestrr_role_docker_networks_default: []
requestrr_role_docker_networks_custom: []
requestrr_role_docker_networks: "{{ docker_networks_common
                                    + lookup('role_var', '_docker_networks_default', role='requestrr')
                                    + lookup('role_var', '_docker_networks_custom', role='requestrr') }}"

# Restart Policy
requestrr_role_docker_restart_policy: unless-stopped

# State
requestrr_role_docker_state: started
