##########################################################################
# Title:            Sandbox: template role                               #
# Author(s):        Raneydazed                                           #
# URL:              https://github.com/saltyorg/Saltbox_mod              #
# --                                                                     #
##########################################################################
#                   GNU General Public License v3.0                      #
##########################################################################
---
################################
# Basics
################################

photoprism_name: photoprism

################################
# Paths
################################

photoprism_role_paths_folder: "{{ photoprism_name }}"
photoprism_role_paths_location: "{{ server_appdata_path }}/{{ photoprism_role_paths_folder }}"
photoprism_role_paths_folders_list:
  - "{{ photoprism_role_paths_location }}"
  - "{{ photoprism_role_paths_location }}/originals"
  - "{{ photoprism_role_paths_location }}/storage"
  - "{{ photoprism_role_paths_location }}/import"

################################
# Web
################################

photoprism_role_web_subdomain: "{{ photoprism_name }}"
photoprism_role_web_domain: "{{ user.domain }}"
photoprism_role_web_port: "2342"
photoprism_role_web_url: "{{ 'https://' + (lookup('role_var', '_web_subdomain', role='photoprism') + '.' + lookup('role_var', '_web_domain', role='photoprism')
                          if (lookup('role_var', '_web_subdomain', role='photoprism') | length > 0)
                          else lookup('role_var', '_web_domain', role='photoprism')) }}"

################################
# DNS
################################

photoprism_role_dns_record: "{{ lookup('role_var', '_web_subdomain', role='photoprism') }}"
photoprism_role_dns_zone: "{{ lookup('role_var', '_web_domain', role='photoprism') }}"
photoprism_role_dns_proxy: "{{ dns_proxied }}"

################################
# Traefik
################################

photoprism_role_traefik_sso_middleware: "{{ traefik_default_sso_middleware }}"
photoprism_role_traefik_middleware_default: "{{ traefik_default_middleware }}"
photoprism_role_traefik_middleware_custom: ""
photoprism_role_traefik_certresolver: "{{ traefik_default_certresolver }}"
photoprism_role_traefik_enabled: true
photoprism_role_traefik_api_enabled: false
photoprism_role_traefik_api_endpoint: ""

################################
# Docker
################################

# Container
photoprism_role_docker_container: "{{ photoprism_name }}"

# Image
photoprism_role_docker_image_pull: true
photoprism_role_docker_image_tag: "latest"
photoprism_role_docker_image_repo: "photoprism/photoprism"
photoprism_role_docker_image: "{{ lookup('role_var', '_docker_image_repo', role='photoprism') }}:{{ lookup('role_var', '_docker_image_tag', role='photoprism') }}"

# Envs
photoprism_role_docker_envs_default:
  PHOTOPRISM_ADMIN_PASSWORD: "{{ user.pass }}"
  PHOTOPRISM_AUTH_MODE: "password"
  PHOTOPRISM_SITE_URL: "{{ lookup('role_var', '_web_url', role='photoprism') }}"
  PHOTOPRISM_ORIGINALS_LIMIT: "5000"
  PHOTOPRISM_HTTP_COMPRESSION: "gzip"
  PHOTOPRISM_LOG_LEVEL: "info"
  PHOTOPRISM_READONLY: "false"
  PHOTOPRISM_EXPERIMENTAL: "false"
  PHOTOPRISM_DISABLE_CHOWN: "false"
  PHOTOPRISM_DISABLE_WEBDAV: "false"
  PHOTOPRISM_DISABLE_SETTINGS: "false"
  PHOTOPRISM_DISABLE_TENSORFLOW: "false"
  PHOTOPRISM_DISABLE_FACES: "false"
  PHOTOPRISM_DISABLE_CLASSIFICATION: "false"
  PHOTOPRISM_DISABLE_RAW: "false"
  PHOTOPRISM_RAW_PRESETS: "false"
  PHOTOPRISM_JPEG_QUALITY: "85"
  PHOTOPRISM_DETECT_NSFW: "false"
  PHOTOPRISM_UPLOAD_NSFW: "false"
  PHOTOPRISM_DATABASE_DRIVER: "mysql"
  PHOTOPRISM_DATABASE_SERVER: "mariadb:3306"
  PHOTOPRISM_DATABASE_NAME: "photoprisms"
  PHOTOPRISM_DATABASE_USER: "root"
  PHOTOPRISM_DATABASE_PASSWORD: "password321"
  PHOTOPRISM_SITE_CAPTION: "AI-Powered Photos App"
  PHOTOPRISM_SITE_DESCRIPTION: "Trying out PhotoPrism!"
  PHOTOPRISM_SITE_AUTHOR: "{{ user.name }}"
  PHOTOPRISM_INIT: "gpu tensorflow"
photoprism_role_docker_envs_custom: {}
photoprism_role_docker_envs: "{{ lookup('role_var', '_docker_envs_default', role='photoprism')
                                 | combine(lookup('role_var', '_docker_envs_custom', role='photoprism')) }}"

# Volumes
photoprism_role_docker_volumes_default:
  - "{{ lookup('role_var', '_paths_location', role='photoprism') }}/originals:/photoprism/originals"
  - "{{ lookup('role_var', '_paths_location', role='photoprism') }}/import:/photoprism/import"
  - "{{ lookup('role_var', '_paths_location', role='photoprism') }}/storage:/photoprism/storage"
photoprism_role_docker_volumes_custom: []
photoprism_role_docker_volumes: "{{ lookup('role_var', '_docker_volumes_default', role='photoprism')
                                    + lookup('role_var', '_docker_volumes_custom', role='photoprism') }}"

# Hostname
photoprism_role_docker_hostname: "{{ photoprism_name }}"

# Networks
photoprism_role_docker_networks_alias: "{{ photoprism_name }}"
photoprism_role_docker_networks_default: []
photoprism_role_docker_networks_custom: []
photoprism_role_docker_networks: "{{ docker_networks_common
                                     + lookup('role_var', '_docker_networks_default', role='photoprism')
                                     + lookup('role_var', '_docker_networks_custom', role='photoprism') }}"

# Security Opts
photoprism_role_docker_security_opts_default:
  - "seccomp=unconfined"
  - "apparmor=unconfined"
photoprism_role_docker_security_opts_custom: []
photoprism_role_docker_security_opts: "{{ lookup('role_var', '_docker_security_opts_default', role='photoprism')
                                          + lookup('role_var', '_docker_security_opts_custom', role='photoprism') }}"

# Working Directory
photoprism_role_docker_working_dir: "/photoprism"

# Restart Policy
photoprism_role_docker_restart_policy: unless-stopped

# State
photoprism_role_docker_state: started

# User
photoprism_role_docker_user: "{{ uid }}:{{ gid }}"

# Dependencies
photoprism_role_depends_on: "mariadb"
photoprism_role_depends_on_delay: "0"
photoprism_role_depends_on_healthchecks: "false"
