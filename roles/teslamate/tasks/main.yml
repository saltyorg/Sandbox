##########################################################################
# Title:            Sandbox: teslamate                                   #
# Author(s):        maindust                                             #
# URL:              https://github.com/saltyorg/Sandbox                  #
# --                                                                     #
##########################################################################
#                   GNU General Public License v3.0                      #
##########################################################################
---
- name: Add DNS record
  ansible.builtin.include_tasks: "{{ resources_tasks_path }}/dns/tasker.yml"
  vars:
    dns_record: "{{ lookup('role_var', '_dns_record') }}"
    dns_zone: "{{ lookup('role_var', '_dns_zone') }}"
    dns_proxy: "{{ lookup('role_var', '_dns_proxy') }}"

- name: Remove existing Docker container
  ansible.builtin.include_tasks: "{{ resources_tasks_path }}/docker/remove_docker_container.yml"

- name: Check if '/opt/saltbox/teslamate_db.ini' folder exists
  ansible.builtin.stat:
    path: "/opt/saltbox/teslamate_db.ini"
  register: teslamate_db_stat

- name: Migration Block
  when: teslamate_db_stat.stat.exists
  block:
    - name: "Load legacy Teslamate Postgres Saltbox facts"
      saltbox_facts:
        role: "teslamate_db"
        instance: "teslamate"
        keys:
          secret_key: ""
        owner: "{{ user.name }}"
        group: "{{ user.name }}"
      register: teslamate_db_saltbox_facts

    - name: "Save Teslamate Saltbox facts"
      saltbox_facts:
        role: "teslamate"
        instance: "teslamate"
        keys:
          secret_key: "{{ lookup('ansible.builtin.password', '/dev/null', chars=['ascii_letters', 'digits'], length=50) }}"
          postgres_password: "{{ teslamate_db_saltbox_facts.facts.secret_key }}"
        owner: "{{ user.name }}"
        group: "{{ user.name }}"

    - name: "Delete legacy Teslamate Postgres Saltbox facts"
      saltbox_facts:
        role: "teslamate_db"
        instance: "teslamate"
        delete_type: "role"
        method: "delete"

- name: "Save Teslamate Saltbox facts"
  saltbox_facts:
    role: "teslamate"
    instance: "teslamate"
    keys:
      secret_key: "{{ lookup('ansible.builtin.password', '/dev/null', chars=['ascii_letters', 'digits'], length=50) }}"
      postgres_password: "{{ lookup('ansible.builtin.password', '/dev/null', chars=['ascii_letters', 'digits'], length=50) }}"
    owner: "{{ user.name }}"
    group: "{{ user.name }}"
  register: teslamate_saltbox_facts
  tags:
    - teslamate
    - teslamate-postgres-password

- name: "Import Postgres Role"
  ansible.builtin.include_role:
    name: postgres
  vars:
    postgres_instances: ["{{ lookup('role_var', '_postgres_name', role='teslamate') }}"]
    postgres_role_docker_image_tag: "{{ lookup('role_var', '_postgres_docker_image_tag', role='teslamate') }}"
    postgres_role_docker_image_repo: "{{ lookup('role_var', '_postgres_docker_image_repo', role='teslamate') }}"
    postgres_role_paths_folder: "{{ lookup('role_var', '_postgres_paths_folder', role='teslamate') }}"
    postgres_role_paths_location: "{{ lookup('role_var', '_postgres_paths_location', role='teslamate') }}"
    postgres_role_docker_env_db: "{{ lookup('role_var', '_postgres_docker_env_db', role='teslamate') }}"
    postgres_role_docker_healthcheck: "{{ lookup('role_var', '_postgres_docker_healthcheck', role='teslamate') }}"
    postgres_role_docker_env_password: "{{ lookup('role_var', '_postgres_password', role='teslamate') }}"
  when: lookup('role_var', '_postgres_deploy', role='teslamate')

- name: Print Teslamate DB Password
  ansible.builtin.debug:
    msg: "{{ lookup('role_var', '_postgres_password', role='teslamate') }}"
  tags:
    - teslamate-postgres-password

- name: Mosquitto Role
  ansible.builtin.include_role:
    name: mqtt

- name: Create directories
  ansible.builtin.include_tasks: "{{ resources_tasks_path }}/directories/create_directories.yml"

- name: Create Docker container
  ansible.builtin.include_tasks: "{{ resources_tasks_path }}/docker/create_docker_container.yml"
