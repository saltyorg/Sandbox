##########################################################################
# Title:            Sandbox: teslamate                                   #
# Author(s):        maindust                                             #
# URL:              https://github.com/saltyorg/Sandbox                  #
# --                                                                     #
##########################################################################
#                   GNU General Public License v3.0                      #
##########################################################################
---
- name: Add DNS record
  ansible.builtin.include_tasks: "{{ resources_tasks_path }}/dns/tasker.yml"
  vars:
    dns_record: "{{ lookup('vars', role_name + '_dns_record') }}"
    dns_zone: "{{ lookup('vars', role_name + '_dns_zone') }}"
    dns_proxy: "{{ lookup('vars', role_name + '_dns_proxy') }}"

- name: Remove existing Docker container
  ansible.builtin.include_tasks: "{{ resources_tasks_path }}/docker/remove_docker_container.yml"

- name: "Save Teslamate Postgres Saltbox facts"
  saltbox_facts:
    role: "teslamate_db"
    instance: "teslamate"
    keys:
      secret_key: "{{ lookup('ansible.builtin.password', '/dev/null', chars=['ascii_letters', 'digits'], length=50) }}"
    owner: "{{ user.name }}"
    group: "{{ user.name }}"
  register: teslamate_db_saltbox_facts

- name: "Save Teslamate Saltbox facts"
  saltbox_facts:
    role: "teslamate"
    instance: "teslamate"
    keys:
      secret_key: "{{ lookup('ansible.builtin.password', '/dev/null', chars=['ascii_letters', 'digits'], length=50) }}"
    owner: "{{ user.name }}"
    group: "{{ user.name }}"
  register: teslamate_saltbox_facts

- name: Postgres Role
  ansible.builtin.include_role:
    name: postgres
  vars:
    postgres_instances: "{{ teslamate_name }}-postgres"
    postgres_paths_folder: "{{ teslamate_name }}"
    postgres_paths_location: "{{ server_appdata_path }}/{{ postgres_paths_folder }}/postgres"
    postgres_docker_image_tag: "17"
    postgres_docker_env_password: "{{ teslamate_db_saltbox_facts.facts.secret_key }}"

- name: Grafana Role
  ansible.builtin.include_role:
    name: grafana

- name: Mosquitto Role
  ansible.builtin.include_role:
    name: mqtt

- name: Wait for PostgreSQL to be ready
  ansible.builtin.wait_for:
    host: "postgres"
    port: 5432
    timeout: 30
    state: started

- name: Create TeslaMate database inside PostgreSQL
  ansible.builtin.command:
    cmd: "docker exec "{{ teslamate_name }}-postgres" psql -U {{ teslamate_database_user }} -d postgres -c 'CREATE DATABASE {{ teslamate_database_name }};'"
  ignore_errors: true  # Ignore if the database already exists

- name: Create directories
  ansible.builtin.include_tasks: "{{ resources_tasks_path }}/directories/create_directories.yml"

- name: Create Docker container
  ansible.builtin.include_tasks: "{{ resources_tasks_path }}/docker/create_docker_container.yml"
