##########################################################################
# Title:         Sandbox: GoAccess | Default Variables                   #
# Author(s):     salty                                                   #
# URL:           https://github.com/saltyorg/Sandbox                     #
# --                                                                     #
##########################################################################
#                   GNU General Public License v3.0                      #
##########################################################################
---
################################
# Basics
################################

goaccess_name: goaccess

################################
# Paths
################################

goaccess_role_paths_folder: "{{ goaccess_name }}"
goaccess_role_paths_location: "{{ server_appdata_path }}/{{ goaccess_role_paths_folder }}"
goaccess_role_paths_folders_list:
  - "{{ goaccess_role_paths_location }}"

################################
# Web
################################

goaccess_role_web_subdomain: "{{ goaccess_name }}"
goaccess_role_web_domain: "{{ user.domain }}"
goaccess_role_web_port: "7889"
goaccess_role_web_url: "{{ 'https://' + (lookup('role_var', '_web_subdomain', role='goaccess') + '.' + lookup('role_var', '_web_domain', role='goaccess')
                        if (lookup('role_var', '_web_subdomain', role='goaccess') | length > 0)
                        else lookup('role_var', '_web_domain', role='goaccess')) }}"

################################
# DNS
################################

goaccess_role_dns_record: "{{ lookup('role_var', '_web_subdomain', role='goaccess') }}"
goaccess_role_dns_zone: "{{ lookup('role_var', '_web_domain', role='goaccess') }}"
goaccess_role_dns_proxy: "{{ dns_proxied }}"

################################
# Traefik
################################

goaccess_role_traefik_sso_middleware: "{{ traefik_default_sso_middleware }}"
goaccess_role_traefik_middleware_default: "{{ traefik_default_middleware }}"
goaccess_role_traefik_middleware_custom: ""
goaccess_role_traefik_certresolver: "{{ traefik_default_certresolver }}"
goaccess_role_traefik_enabled: true
goaccess_role_traefik_api_enabled: false
goaccess_role_traefik_api_endpoint: ""

################################
# Docker
################################

# Container
goaccess_role_docker_container: "{{ goaccess_name }}"

# Image
goaccess_role_docker_image_pull: true
goaccess_role_docker_image_repo: "gregyankovoy/goaccess"
goaccess_role_docker_image_tag: "latest"
goaccess_role_docker_image: "{{ lookup('role_var', '_docker_image_repo', role='goaccess') }}:{{ lookup('role_var', '_docker_image_tag', role='goaccess') }}"

# Envs
goaccess_role_docker_envs_default:
  TZ: "{{ tz }}"
  PUID: "{{ uid }}"
  PGID: "{{ gid }}"
goaccess_role_docker_envs_custom: {}
goaccess_role_docker_envs: "{{ lookup('role_var', '_docker_envs_default', role='goaccess')
                               | combine(lookup('role_var', '_docker_envs_custom', role='goaccess')) }}"

# Volumes
goaccess_role_docker_volumes_default:
  - "{{ lookup('role_var', '_paths_location', role='goaccess') }}:/config"
  - "{{ lookup('role_var', '_paths_location', role='traefik') }}:/opt/log"
goaccess_role_docker_volumes_custom: []
goaccess_role_docker_volumes: "{{ lookup('role_var', '_docker_volumes_default', role='goaccess')
                                  + lookup('role_var', '_docker_volumes_custom', role='goaccess') }}"

# Hostname
goaccess_role_docker_hostname: "{{ goaccess_name }}"

# Networks
goaccess_role_docker_networks_alias: "{{ goaccess_name }}"
goaccess_role_docker_networks_default: []
goaccess_role_docker_networks_custom: []
goaccess_role_docker_networks: "{{ docker_networks_common
                                   + lookup('role_var', '_docker_networks_default', role='goaccess')
                                   + lookup('role_var', '_docker_networks_custom', role='goaccess') }}"

# Restart Policy
goaccess_role_docker_restart_policy: unless-stopped

# State
goaccess_role_docker_state: started

# Force Kill
goaccess_role_docker_force_kill: true
