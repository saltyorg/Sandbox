##########################################################################
# Title:            Sandbox: Miniflux | Default Variables                #
# Author(s):        powerdude                                            #
# URL:              https://github.com/saltyorg/Sandbox                  #
# --                                                                     #
##########################################################################
#                   GNU General Public License v3.0                      #
##########################################################################
---
################################
# Basics
################################

miniflux_name: miniflux

################################
# Settings
################################

miniflux_admin_username: "{{ user.name }}"
miniflux_admin_password: "{{ user.pass }}"
miniflux_create_admin: "1"
miniflux_postgres_username:
miniflux_postgres_password:
miniflux_postgres_image_tag: "14-alpine"
miniflux_run_migrations: "1"

################################
# Paths
################################

miniflux_paths_folder: "{{ miniflux_name }}"
miniflux_paths_location: "{{ server_appdata_path }}/{{ miniflux_paths_folder }}"
miniflux_paths_folders_list:
  - "{{ miniflux_paths_location }}"

################################
# Web
################################

miniflux_web_subdomain: "{{ miniflux_name }}"
miniflux_web_domain: "{{ user.domain }}"
miniflux_web_port: "8080"
miniflux_web_url: "{{ 'https://' + miniflux_web_subdomain + '.' + miniflux_web_domain }}"

################################
# DNS
################################

miniflux_dns_record: "{{ miniflux_web_subdomain }}"
miniflux_dns_zone: "{{ miniflux_web_domain }}"
miniflux_dns_proxy: "{{ dns.proxied }}"

################################
# Traefik
################################

miniflux_traefik_sso_middleware: "{{ traefik_default_sso_middleware }}"
miniflux_traefik_middleware_default: "{{ traefik_default_middleware + ','
                                              + lookup('vars', miniflux_name + '_traefik_sso_middleware', default=miniflux_traefik_sso_middleware)
                                           if (lookup('vars', miniflux_name + '_traefik_sso_middleware', default=miniflux_traefik_sso_middleware) | length > 0)
                                           else traefik_default_middleware }}"
miniflux_traefik_middleware_custom: ""
miniflux_traefik_middleware: "{{ miniflux_traefik_middleware_default + ','
                                      + miniflux_traefik_middleware_custom
                                   if (not miniflux_traefik_middleware_custom.startswith(',') and miniflux_traefik_middleware_custom | length > 0)
                                   else miniflux_traefik_middleware_default
                                      + miniflux_traefik_middleware_custom }}"
miniflux_traefik_certresolver: "{{ traefik_default_certresolver }}"
miniflux_traefik_enabled: true

################################
# Docker
################################

# Container
miniflux_docker_container: "{{ miniflux_name }}"

# Image
miniflux_docker_image_pull: true
miniflux_docker_image_tag: "latest"
miniflux_docker_image: "miniflux/miniflux:{{ miniflux_docker_image_tag }}"

# Ports
miniflux_docker_ports_defaults: []
miniflux_docker_ports_custom: []
miniflux_docker_ports: "{{ miniflux_docker_ports_defaults
                                + miniflux_docker_ports_custom }}"

# Envs
miniflux_docker_envs_default:
  DATABASE_URL: "postgres://{{ miniflux_postgres_username }}:{{ miniflux_postgres_password }}@{{ miniflux_name }}-postgres/miniflux?sslmode=disable"
  RUN_MIGRATIONS: "{{ miniflux_run_migrations }}"
  CREATE_ADMIN: "{{ miniflux_create_admin }}"
  ADMIN_USERNAME: "{{ miniflux_admin_username }}"
  ADMIN_PASSWORD: "{{ miniflux_admin_password }}"
miniflux_docker_envs_custom: {}
miniflux_docker_envs: "{{ miniflux_docker_envs_default
                               | combine(miniflux_docker_envs_custom) }}"

# Commands
miniflux_docker_commands_default: []
miniflux_docker_commands_custom: []
miniflux_docker_commands: "{{ miniflux_docker_commands_default
                                   + miniflux_docker_commands_custom }}"

# Volumes
miniflux_docker_volumes_default:
  - /etc/localtime:/etc/localtime:ro
miniflux_docker_volumes_custom: []
miniflux_docker_volumes: "{{ miniflux_docker_volumes_default
                                  + miniflux_docker_volumes_custom }}"

# Devices
miniflux_docker_devices_default: []
miniflux_docker_devices_custom: []
miniflux_docker_devices: "{{ miniflux_docker_devices_default
                                  + miniflux_docker_devices_custom }}"

# Hosts
miniflux_docker_hosts_default: []
miniflux_docker_hosts_custom: []
miniflux_docker_hosts: "{{ docker_hosts_common
                                | combine(miniflux_docker_hosts_default)
                                | combine(miniflux_docker_hosts_custom) }}"

# Labels
miniflux_docker_labels_default: {}
miniflux_docker_labels_custom: {}
miniflux_docker_labels: "{{ docker_labels_common
                                 | combine(miniflux_docker_labels_default)
                                 | combine(miniflux_docker_labels_custom) }}"

# Hostname
miniflux_docker_hostname: "{{ miniflux_name }}"

# Networks
miniflux_docker_networks_alias: "{{ miniflux_name }}"
miniflux_docker_networks_default: []
miniflux_docker_networks_custom: []
miniflux_docker_networks: "{{ docker_networks_common
                                   + miniflux_docker_networks_default
                                   + miniflux_docker_networks_custom }}"

# Capabilities
miniflux_docker_capabilities_default: []
miniflux_docker_capabilities_custom: []
miniflux_docker_capabilities: "{{ miniflux_docker_capabilities_default
                                       + miniflux_docker_capabilities_custom }}"

# Security Opts
miniflux_docker_security_opts_default: []
miniflux_docker_security_opts_custom: []
miniflux_docker_security_opts: "{{ miniflux_docker_security_opts_default
                                        + miniflux_docker_security_opts_custom }}"

# Restart Policy
miniflux_docker_restart_policy: unless-stopped

# State
miniflux_docker_state: started
