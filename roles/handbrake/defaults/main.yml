##########################################################################
# Title:            Sandbox: Handbrake                                   #
# Author(s):        Satz, kowalski                                       #
# URL:              https://github.com/saltyorg/Sandbox                  #
# --                                                                     #
##########################################################################
#                   GNU General Public License v3.0                      #
##########################################################################
---
################################
# Basics
################################

handbrake_name: handbrake

################################
# Paths
################################

handbrake_role_paths_folder: "{{ handbrake_name }}"
handbrake_role_paths_location: "{{ server_appdata_path }}/{{ handbrake_role_paths_folder }}"
handbrake_role_paths_folders_list:
  - "{{ handbrake_role_paths_location }}"
  - "/mnt/local/downloads/handbrake/watch"
  - "/mnt/local/downloads/handbrake/output"

################################
# Web
################################

handbrake_role_web_subdomain: "{{ handbrake_name }}"
handbrake_role_web_domain: "{{ user.domain }}"
handbrake_role_web_port: "5800"
handbrake_role_web_url: "{{ 'https://' + (lookup('role_var', '_web_subdomain', role='handbrake') + '.' + lookup('role_var', '_web_domain', role='handbrake')
                         if (lookup('role_var', '_web_subdomain', role='handbrake') | length > 0)
                         else lookup('role_var', '_web_domain', role='handbrake')) }}"

################################
# DNS
################################

handbrake_role_dns_record: "{{ lookup('role_var', '_web_subdomain', role='handbrake') }}"
handbrake_role_dns_zone: "{{ lookup('role_var', '_web_domain', role='handbrake') }}"
handbrake_role_dns_proxy: "{{ dns_proxied }}"

################################
# Traefik
################################

handbrake_role_traefik_sso_middleware: ""
handbrake_role_traefik_middleware_default: "{{ traefik_default_middleware }}"
handbrake_role_traefik_middleware_custom: ""
handbrake_role_traefik_certresolver: "{{ traefik_default_certresolver }}"
handbrake_role_traefik_enabled: true
handbrake_role_traefik_api_enabled: false
handbrake_role_traefik_api_endpoint: ""

################################
# Docker
################################

# Container
handbrake_role_docker_container: "{{ handbrake_name }}"

# Image
handbrake_role_docker_image_pull: true
handbrake_role_docker_image_repo: "jlesage/handbrake"
handbrake_role_docker_image_tag: "latest"
handbrake_role_docker_image: "{{ lookup('role_var', '_docker_image_repo', role='handbrake') }}:{{ lookup('role_var', '_docker_image_tag', role='handbrake') }}"

# Envs
handbrake_role_docker_envs_default:
  USER_ID: "{{ uid }}"
  GROUP_ID: "{{ gid }}"
  TZ: "{{ tz }}"
  CLEAN_TMP_DIR: "1"
  ENABLE_CJK_FONT: "1"
  VNC_PASSWORD: "{{ handbrake.handbrake_pass | default('saltbox', true) }}"
handbrake_role_docker_envs_custom: {}
handbrake_role_docker_envs: "{{ lookup('role_var', '_docker_envs_default', role='handbrake')
                                | combine(lookup('role_var', '_docker_envs_custom', role='handbrake')) }}"

# Volumes
handbrake_role_docker_volumes_default:
  - "{{ lookup('role_var', '_paths_location', role='handbrake') }}:/config"
  - "/mnt:/storage:ro"
  - "/mnt/local/downloads/handbrake/watch:/watch"
  - "/mnt/local/downloads/handbrake/output:/output"
handbrake_role_docker_volumes_custom: []
handbrake_role_docker_volumes: "{{ lookup('role_var', '_docker_volumes_default', role='handbrake')
                                   + lookup('role_var', '_docker_volumes_custom', role='handbrake') }}"

# Hostname
handbrake_role_docker_hostname: "{{ handbrake_name }}"

# Networks
handbrake_role_docker_networks_alias: "{{ handbrake_name }}"
handbrake_role_docker_networks_default: []
handbrake_role_docker_networks_custom: []
handbrake_role_docker_networks: "{{ docker_networks_common
                                    + lookup('role_var', '_docker_networks_default', role='handbrake')
                                    + lookup('role_var', '_docker_networks_custom', role='handbrake') }}"

# Restart Policy
handbrake_role_docker_restart_policy: unless-stopped

# State
handbrake_role_docker_state: started
