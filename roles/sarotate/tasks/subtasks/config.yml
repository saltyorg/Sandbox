#########################################################################
# Title:            Sandbox: SARotate                                   #
# Author(s):        hackmonker                                          #
# URL:              https://github.com/saltyorg/Sandbox                 #
# --                                                                    #
#########################################################################
#                   GNU General Public License v3.0                     #
#########################################################################
---    
    
- name: Get types of the remote entered
  ansible.builtin.shell: "echo {{ lookup('ini', 'type', section=item, file=sarotate_paths_rclone_config_location) }}"
  loop: "{{ sarotate.remotes }}"
  register: remote_type

- name: Set variable for remote types
  set_fact:
    remote_type_var: "{{ remote_type.results | map(attribute='stdout') }}"

- name: Get drive remote names
  set_fact:
    drive_remotes: "{{ remote_type.results | selectattr('stdout', '==', 'drive') | map(attribute='item') }}"
  when: remote_type_var is search("drive")
    
- name: Get union remote names
  block:

    - name: Set variable for union remote names
      set_fact:
        union_remotes: "{{ remote_type.results | selectattr('stdout', '==', 'union') | map(attribute='item') }}"

    - name: Get the upstreams of union remotes
      ansible.builtin.shell: "echo {{ lookup('ini', 'upstreams', section=item, file=sarotate_paths_rclone_config_location) }}"
      with_items: "{{ union_remotes }}"
      register: union_upstreams_var

    - name: Set variable for upstreams of union remotes
      set_fact:
        union_upstreams: "{{ union_upstreams_var.results | map(attribute='stdout') | map('split',': ') | join('\", \"') | replace(':', '') }}"

  when: remote_type_var is search("union")

- name: Merge remote names and upstreams of both drive and union remotes
  set_fact:
    remote_names_var: "{{ remote_names_var | default([]) + item }}"
  loop:
    - "{{ drive_remotes | default([]) }}"
    - "{{ union_upstreams | default([]) }}"

- name: Set variable for merged remote names
  set_fact:
    remote_names: "{{ remote_names_var | unique }}"
