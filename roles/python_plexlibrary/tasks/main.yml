#########################################################################
# Title:         Sandbox: Python-PlexLibrary Role                       #
# Author(s):     desimaniac, salty                                      #
# URL:           https://github.com/saltyorg/Sandbox                    #
# --                                                                    #
#########################################################################
#                   GNU General Public License v3.0                     #
#########################################################################
---
- name: Set Default Plex instance
  ansible.builtin.set_fact:
    plex_name: "{{ plex_name | default(plex_instances[0]) }}"

- name: Create python-plexlibrary directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ user.name }}"
    group: "{{ user.name }}"
    recurse: true
    mode: "0775"
  with_items:
    - "/opt/python-plexlibrary"

- name: Clone python-plexlibrary
  ansible.builtin.git:
    repo: "https://github.com/adamgot/python-plexlibrary.git"
    dest: "/opt/python-plexlibrary"
    version: master
    force: true
  become: true
  become_user: "{{ user.name }}"

- name: Execute Python role
  ansible.builtin.include_role:
    name: "python"
  vars:
    python_version: "3.8"

- name: "Lookup Python 3.8 installation"
  ansible.builtin.command: "{{ python_bin }} python find 3.8 --managed-python"
  register: python_plexlibrary_python_install_path_lookup
  changed_when: false
  environment: "{{ python_environment }}"
  become: true
  become_user: "{{ user.name }}"

- name: Set Python version
  ansible.builtin.set_fact:
    python_plexlibrary_python_install_path: "{{ python_plexlibrary_python_install_path_lookup.stdout }}"

- name: Delete venv folder
  ansible.builtin.file:
    path: "/opt/python-plexlibrary/venv"
    state: absent

- name: Create venv
  ansible.builtin.command:
    cmd: "{{ python_plexlibrary_python_install_path }} -m venv /opt/python-plexlibrary/venv"
  args:
    creates: "/opt/python-plexlibrary/venv"
  become: true
  become_user: "{{ user.name }}"

- name: Install pip requirements
  ansible.builtin.pip:
    requirements: "/opt/python-plexlibrary/requirements.txt"
    virtualenv: "/opt/python-plexlibrary/venv"
    virtualenv_command: "/opt/python-plexlibrary/venv/bin/python3 -m pip"
  become: true
  become_user: "{{ user.name }}"

- name: Uninstall pip trakt
  ansible.builtin.pip:
    name: trakt
    state: absent
    virtualenv: "/opt/python-plexlibrary/venv"
    virtualenv_command: "/opt/python-plexlibrary/venv/bin/python3 -m pip"
  become: true
  become_user: "{{ user.name }}"

- name: Install pip pytrakt
  ansible.builtin.pip:
    name: pytrakt
    state: present
    virtualenv: "/opt/python-plexlibrary/venv"
    virtualenv_command: "/opt/python-plexlibrary/venv/bin/python3 -m pip"
  become: true
  become_user: "{{ user.name }}"

- name: Find pip3 path
  ansible.builtin.find:
    paths: /opt/python-plexlibrary/venv
    recurse: true
    patterns: 'pip3'
  register: files

- name: Path
  ansible.builtin.set_fact:
    python_plexlibrary_bin_folder: "{{ files.files[0].path | dirname }}"

- name: Check config exists
  ansible.builtin.stat:
    path: "/opt/python-plexlibrary/config.yml"
  register: python_plexlibrary_config

- name: Create config from template
  ansible.builtin.copy:
    src: "/opt/python-plexlibrary/config-template.yml"
    dest: "/opt/python-plexlibrary/config.yml"
    owner: "{{ user.name }}"
    group: "{{ user.name }}"
    mode: "0664"
    force: false
  when: not python_plexlibrary_config.stat.exists

- name: Add plex url to config file
  ansible.builtin.shell: |
    yyq -i '.plex.baseurl = "{{ lookup('role_var', '_web_url', role='plex') }}"' /opt/python-plexlibrary/config.yml
  become: true
  become_user: "{{ user.name }}"

- name: Import Plex Auth Token role
  ansible.builtin.include_role:
    name: plex_auth_token
  when: plex_account_is_enabled

- name: Add plex token to config file
  ansible.builtin.shell: |
    yyq -i '.plex.token = "{{ plex_auth_token }}"' /opt/python-plexlibrary/config.yml
  become: true
  become_user: "{{ user.name }}"
  when: plex_account_is_enabled

- name: "Copy example recipes to '/opt/python-plexlibrary' folder"
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: "/opt/python-plexlibrary/recipes/examples/saltbox/"
    owner: "{{ user.name }}"
    group: "{{ user.name }}"
    mode: "0775"
    force: true
  with_fileglob:
    - "recipes/*.yml"

- name: "Copy helper scripts to '/opt/python-plexlibrary' folder"
  ansible.builtin.template:
    src: "{{ item }}.j2"
    dest: "/opt/python-plexlibrary/{{ item }}"
    owner: "{{ user.name }}"
    group: "{{ user.name }}"
    mode: "0775"
    force: true
  with_items:
    - "plexlibrary.sh"
    - "plexlibrary-cron-helper.sh"

- name: "Create '/usr/local/bin' symlink"
  ansible.builtin.file:
    src: "/opt/python-plexlibrary/plexlibrary.sh"
    dest: "/usr/local/bin/plexlibrary"
    state: link

- name: "Add items to '.gitignore'"
  ansible.builtin.lineinfile:
    path: "/opt/python-plexlibrary/.gitignore"
    state: present
    insertafter: EOF
    line: '{{ item }}'
  with_items:
    - "recipes/examples/saltbox/*.yml"
    - "plexlibrary.sh"
    - "plexlibrary-cron-helper.sh"
    - "*.log"
