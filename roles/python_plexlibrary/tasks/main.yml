#########################################################################
# Title:         Sandbox: Python-PlexLibrary Role                       #
# Author(s):     desimaniac, salty                                      #
# URL:           https://github.com/saltyorg/Sandbox                    #
# --                                                                    #
#########################################################################
#                   GNU General Public License v3.0                     #
#########################################################################
---
- name: Import Default Plex variables
  include_vars: /srv/git/saltbox/roles/plex/defaults/main.yml

- name: Set Default Plex instance
  set_fact:
    plex_name: "{{ plex_instances[0] }}"
  when: not plex_name is defined

- name: Create python-plexlibrary directories
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ user.name }}"
    group: "{{ user.name }}"
    recurse: true
    mode: "0775"
  with_items:
    - "/opt/python-plexlibrary"

- name: Clone python-plexlibrary
  git:
    repo: "https://github.com/adamgot/python-plexlibrary.git"
    dest: "/opt/python-plexlibrary"
    version: master
    force: true
  become: true
  become_user: "{{ user.name }}"

- name: Install pip requirements
  pip:
    requirements: "/opt/python-plexlibrary/requirements.txt"
    virtualenv_python: python3
    virtualenv: "/opt/plex_autoscan/venv"
  become: true
  become_user: "{{ user.name }}"

- name: Check config exists
  stat:
    path: "/opt/python-plexlibrary/config.yml"
  register: python_plexlibrary_config

- name: Create config from template
  copy:
    src: "/opt/python-plexlibrary/config-template.yml"
    dest: "/opt/python-plexlibrary/config.yml"
    owner: "{{ user.name }}"
    group: "{{ user.name }}"
    mode: "0775"
    force: false
  when: not python_plexlibrary_config.stat.exists

- name: Add plex url to config file
  shell: |
    yyq e -i '.plex.baseurl = "{{ plex_web_url }}"' /opt/python-plexlibrary/config.yml
  become: true
  become_user: "{{ user.name }}"

- name: Import Plex Auth Token role
  import_role:
    name: plex_auth_token
  when: plex_account_is_enabled

- name: Add plex token to config file
  shell: |
    yyq e -i '.plex.token = "{{ plex_auth_token }}"' /opt/python-plexlibrary/config.yml
  become: true
  become_user: "{{ user.name }}"
  when: plex_account_is_enabled

- name: "Copy example recipes to '/opt/python-plexlibrary' folder"
  copy:
    src: "{{ item }}"
    dest: "/opt/python-plexlibrary/recipes/examples/saltbox/"
    owner: "{{ user.name }}"
    group: "{{ user.name }}"
    mode: "0775"
    force: true
  with_fileglob:
    - "recipes/*.yml"

- name: "Copy helper scripts to '/opt/python-plexlibrary' folder"
  copy:
    src: "{{ item }}"
    dest: "/opt/python-plexlibrary/{{ item }}"
    owner: "{{ user.name }}"
    group: "{{ user.name }}"
    mode: "0775"
    force: true
  loop:
    - "plexlibrary.sh"
    - "plexlibrary-cron-helper.sh"

- name: "Create '/usr/local/bin' symlink"
  file:
    src: "/opt/python-plexlibrary/plexlibrary.sh"
    dest: "/usr/local/bin/plexlibrary"
    state: link

- name: "Add items to '.gitignore'"
  lineinfile:
    path: "/opt/python-plexlibrary/.gitignore"
    state: present
    insertafter: EOF
    line: '{{ item }}'
  with_items:
    - "recipes/examples/saltbox/*.yml"
    - "plexlibrary.sh"
    - "plexlibrary-cron-helper.sh"
    - "*.log"

- name: "Schedule cron task for daily update."
  cron:
    name: "Python-PlexLibrary"
    user: "{{ user.name }}"
    job: "/opt/python-plexlibrary/plexlibrary-cron-helper.sh"
    special_time: daily
    state: present
