##########################################################################
# Title:            Sandbox: zurg_testing                                #
# Author(s):        maindust                                             #
# URL:              https://github.com/saltyorg/Sandbox                  #
# --                                                                     #
##########################################################################
#                   GNU General Public License v3.0                      #
##########################################################################
---
# tasks/main.yml

# 1. Simulate prompt using debug and pause
- name: Prompt user for Real-Debrid API Token
  ansible.builtin.pause:
    prompt: "Please enter your Real-Debrid API Token:"
  register: rd_token_input

# 2. Set the Real-Debrid API token fact
- name: Set the Real-Debrid API token fact
  ansible.builtin.set_fact:
    user_rd_api_token: "{{ rd_token_input.user_input }}"

# 3. Verify the token is set (Optional debug for testing)
- name: Show Real-Debrid API token
  ansible.builtin.debug:
    var: user_rd_api_token

# 4. Check if repo clone directory exists
- name: Check if repo clone directory exists
  ansible.builtin.stat:
    path: "{{ zurg_testing_clone_dest }}"
  register: zurg_testing_dir

# 5. Create repo clone directory if not present
- name: Create repo clone directory if not present
  ansible.builtin.file:
    path: "{{ zurg_testing_clone_dest }}"
    state: directory
    mode: '0755'
  when: not zurg_testing_dir.stat.exists

# 6. Clone the Zurg repository only if zurg-testing exists or was created
- name: Clone the Zurg repo
  ansible.builtin.git:
    repo: "{{ zurg_testing_repo_url }}"
    dest: "{{ zurg_testing_clone_dest }}"
    update: yes
  when: zurg_testing_dir.stat.exists or not zurg_testing_dir.stat.exists

# 7. Add token in config.yml
- name: Update config.yml with Real-Debrid API token
  ansible.builtin.lineinfile:
    path: "{{ zurg_testing_config_file }}"
    regexp: '^token:'
    line: "token: {{ user_rd_api_token }}"
    create: yes

# 8. Check if mount directory exists
- name: Check if mount directory exists
  ansible.builtin.stat:
    path: "{{ zurg_testing_mount_dir }}"
  register: zurg_mount_dir

# 9. Create mount directory if not present
- name: Create mount directory if not present
  ansible.builtin.file:
    path: "{{ zurg_testing_mount_dir }}"
    state: directory
    mode: '0755'
  when: not zurg_mount_dir.stat.exists

# 10. Run docker-compose v2 up
- name: Run docker-compose v2 up
  community.docker.docker_compose_v2:
    project_src: "{{ zurg_testing_clone_dest }}"
    pull: always  # Pull policy (choose 'always', 'missing', 'never', or 'policy')
    build: always
    state: present
    recreate: auto

# 11. List contents of mount directory
- name: List contents of mount directory
  ansible.builtin.shell: "time ls -1R {{ zurg_testing_mount_dir }}"
  register: zurg_ls_output

# 12. Show the output of the ls command
- name: Show the output of the ls command
  ansible.builtin.debug:
    var: zurg_ls_output.stdout_lines
