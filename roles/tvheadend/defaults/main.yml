##########################################################################
# Title:            Sandbox: tvheadend | Default Variables               #
# Author(s):        JigSawFr                                             #
# URL:              https://github.com/saltyorg/Sandbox                  #
# --                                                                     #
##########################################################################
#                   GNU General Public License v3.0                      #
##########################################################################
---
################################
# Basics
################################

tvheadend_name: tvheadend

################################
# Paths
################################

tvheadend_role_paths_folder: "{{ tvheadend_name }}"
tvheadend_role_paths_location: "{{ server_appdata_path }}/{{ tvheadend_role_paths_folder }}"
tvheadend_role_paths_downloads_location: "{{ downloads_root_path }}/{{ tvheadend_role_paths_folder }}"
tvheadend_role_paths_folders_list:
  - "{{ tvheadend_role_paths_location }}"
  - "{{ tvheadend_role_paths_downloads_location }}"


################################
# Web
################################

tvheadend_role_web_subdomain: "{{ tvheadend_name }}"
tvheadend_role_web_domain: "{{ user.domain }}"
tvheadend_role_web_port: "9981"
tvheadend_role_web_url: "{{ 'https://' + (lookup('role_var', '_web_subdomain', role='tvheadend') + '.' + lookup('role_var', '_web_domain', role='tvheadend')
                         if (lookup('role_var', '_web_subdomain', role='tvheadend') | length > 0)
                         else lookup('role_var', '_web_domain', role='tvheadend')) }}"

################################
# DNS
################################

tvheadend_role_dns_record: "{{ lookup('role_var', '_web_subdomain', role='tvheadend') }}"
tvheadend_role_dns_zone: "{{ lookup('role_var', '_web_domain', role='tvheadend') }}"
tvheadend_role_dns_proxy: "{{ dns_proxied }}"

################################
# Traefik
################################

tvheadend_role_traefik_sso_middleware: "{{ traefik_default_sso_middleware }}"
tvheadend_role_traefik_middleware_default: "{{ traefik_default_middleware }}"
tvheadend_role_traefik_middleware_custom: ""
tvheadend_role_traefik_certresolver: "{{ traefik_default_certresolver }}"
tvheadend_role_traefik_enabled: true
tvheadend_role_traefik_api_enabled: false
tvheadend_role_traefik_api_endpoint: ""

################################
# Docker
################################

# Container
tvheadend_role_docker_container: "{{ tvheadend_name }}"

# Image
tvheadend_role_docker_image_pull: true
tvheadend_role_docker_image_repo: "lscr.io/linuxserver/tvheadend"
tvheadend_role_docker_image_tag: "latest"
tvheadend_role_docker_image: "{{ lookup('role_var', '_docker_image_repo', role='tvheadend') }}:{{ lookup('role_var', '_docker_image_tag', role='tvheadend') }}"

# Envs
tvheadend_role_docker_envs_default:
  TZ: "{{ tz }}"
  PUID: "{{ uid }}"
  PGID: "{{ gid }}"
tvheadend_role_docker_envs_custom: {}
tvheadend_role_docker_envs: "{{ lookup('role_var', '_docker_envs_default', role='tvheadend')
                                | combine(lookup('role_var', '_docker_envs_custom', role='tvheadend')) }}"

# Volumes
tvheadend_role_docker_volumes_default:
  - "{{ lookup('role_var', '_paths_location', role='tvheadend') }}:/config"
  - "{{ lookup('role_var', '_paths_downloads_location', role='tvheadend') }}:/recordings"
tvheadend_role_docker_volumes_custom: []
tvheadend_role_docker_volumes: "{{ lookup('role_var', '_docker_volumes_default', role='tvheadend')
                                   + lookup('role_var', '_docker_volumes_custom', role='tvheadend') }}"

# Hostname
tvheadend_role_docker_hostname: "{{ tvheadend_name }}"

# Networks
tvheadend_role_docker_networks_alias: "{{ tvheadend_name }}"
tvheadend_role_docker_networks_default: []
tvheadend_role_docker_networks_custom: []
tvheadend_role_docker_networks: "{{ docker_networks_common
                                    + lookup('role_var', '_docker_networks_default', role='tvheadend')
                                    + lookup('role_var', '_docker_networks_custom', role='tvheadend') }}"

# Restart Policy
tvheadend_role_docker_restart_policy: unless-stopped

# State
tvheadend_role_docker_state: started
