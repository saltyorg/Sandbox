#########################################################################
# Title:         Sandbox: Plex Patrol Role                              #
# Author(s):     l3uddz, salty                                          #
# URL:           https://github.com/saltyorg/Sandbox                    #
# --                                                                    #
#########################################################################
#                   GNU General Public License v3.0                     #
#########################################################################
---
- name: Import Default Plex variables
  include_vars: /srv/git/saltbox/roles/plex/defaults/main.yml

- name: Set Default Plex instance
  set_fact:
    plex_name: "{{ plex_instances[0] }}"
  when: not plex_name is defined

- name: Stop and remove any existing container
  docker_container:
    name: plex_patrol
    state: absent
    container_default_behavior: compatibility
    tls_hostname: localhost

- name: Create plex_patrol directories
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ user.name }}"
    group: "{{ user.name }}"
    mode: "0775"
  with_items:
    - /opt/plex_patrol

- name: Check config exists
  stat:
    path: "/opt/plex_patrol/settings.ini"
  register: plex_patrol_config

- name: Import Plex Auth Token role
  import_role:
    name: plex_auth_token
  when: plex_account_is_enabled and not plex_patrol_config.stat.exists

- name: Import default config
  template:
    src: settings.ini.j2
    dest: /opt/plex_patrol/settings.ini
    owner: "{{ user.name }}"
    group: "{{ user.name }}"
    mode: 0775
    force: true
  when: not plex_patrol_config.stat.exists

- name: Create and start container
  docker_container:
    name: plex_patrol
    image: "cloudb0x/plex_patrol:latest"
    pull: true
    user: "{{ uid }}:{{ gid }}"
    volumes:
      - "/opt/plex_patrol:/config"
    env:
      TZ: "{{ tz }}"
    labels:
      "com.github.saltbox.saltbox_managed": "true"
    networks:
      - name: saltbox
        aliases:
          - plex_patrol
    networks_cli_compatible: true
    network_mode: "{{ docker_networks_name_common }}"
    purge_networks: true
    restart_policy: unless-stopped
    state: started
