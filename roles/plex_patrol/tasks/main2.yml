#########################################################################
# Title:         Sandbox: Plex Patrol Role                              #
# Author(s):     l3uddz, salty                                          #
# URL:           https://github.com/saltyorg/Sandbox                    #
# --                                                                    #
#########################################################################
#                   GNU General Public License v3.0                     #
#########################################################################
---
- name: Stop and remove any existing container
  community.docker.docker_container:
    name: "{{ plex_name }}_patrol"
    state: absent
    container_default_behavior: compatibility
    tls_hostname: localhost

- name: Create plex_patrol directories
  ansible.builtin.file:
    path: "/opt/{{ plex_name }}_patrol"
    state: directory
    owner: "{{ user.name }}"
    group: "{{ user.name }}"
    mode: "0775"

- name: Check config exists
  ansible.builtin.stat:
    path: "/opt/{{ plex_name }}_patrol/settings.ini"
  register: plex_patrol_config

- name: Import Plex Auth Token role
  ansible.builtin.include_role:
    name: plex_auth_token
  when: plex_account_is_enabled and not plex_patrol_config.stat.exists

- name: Import default config
  ansible.builtin.template:
    src: settings.ini.j2
    dest: "/opt/{{ plex_name }}_patrol/settings.ini"
    owner: "{{ user.name }}"
    group: "{{ user.name }}"
    mode: "0664"
    force: true
  when: not plex_patrol_config.stat.exists

- name: Create and start container
  community.docker.docker_container:
    name: "{{ plex_name }}_patrol"
    image: "cloudb0x/plex_patrol:latest"
    pull: true
    user: "{{ uid }}:{{ gid }}"
    volumes:
      - "/opt/{{ plex_name }}_patrol:/config"
    env:
      TZ: "{{ tz }}"
    labels:
      "com.github.saltbox.saltbox_managed": "true"
    networks:
      - name: saltbox
        aliases:
          - "{{ plex_name }}_patrol"
    networks_cli_compatible: true
    network_mode: "{{ docker_networks_name_common }}"
    comparisons:
      '*': ignore
    restart_policy: unless-stopped
    state: started
