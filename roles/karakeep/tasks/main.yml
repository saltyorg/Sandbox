#########################################################################
# Title:            Sandbox: Karakeep                                   #
# Author(s):        Zuke97                                              #
# URL:              https://github.com/saltyorg/Sandbox                 #
# --                                                                    #
#########################################################################
#                   GNU General Public License v3.0                     #
#########################################################################
# Repository: https://github.com/karakeep-app/karakeep
---

- name: Remove legacy Docker container
  ansible.builtin.include_tasks: "{{ resources_tasks_path }}/docker/remove_docker_container.yml"
  vars:
    var_prefix: "hoarder"

- name: Check if legacy folder exists
  ansible.builtin.stat:
    path: "/opt/hoarder"
  register: karakeep_legacy_folder

- name: Check if new folder exists
  ansible.builtin.stat:
    path: "/opt/karakeep"
  register: karakeep_new_folder

- name: Migrate karakeep directory
  migrate_folder:
    legacy_path: /opt/hoarder
    new_path: "{{ karakeep_role_paths_location }}"
    owner: "{{ user.name }}"
    group: "{{ user.name }}"
    mode: '0775'
    recurse: false
  when: karakeep_legacy_folder.stat.exists and not karakeep_new_folder.stat.exists

- name: Check if '/opt/saltbox/hoarder.ini' folder exists
  ansible.builtin.stat:
    path: "/opt/saltbox/hoarder.ini"
  register: hoarder_fact_stat

- name: Migration Block
  when: hoarder_fact_stat.stat.exists
  block:
    - name: "Load legacy Hoarder Saltbox facts"
      saltbox_facts:
        role: "hoarder"
        instance: "hoarder"
        keys:
          secret_key: ""
        owner: "{{ user.name }}"
        group: "{{ user.name }}"
        base_path: "{{ server_appdata_path }}"
      register: hoarder_saltbox_facts

    - name: "Save Karakeep Saltbox facts"
      saltbox_facts:
        role: "karakeep"
        instance: "karakeep"
        keys:
          secret_key: "{{ hoarder_saltbox_facts.facts.secret_key }}"
        owner: "{{ user.name }}"
        group: "{{ user.name }}"
        base_path: "{{ server_appdata_path }}"

    - name: "Delete legacy Hoarder Saltbox facts"
      saltbox_facts:
        role: "hoarder"
        instance: "hoarder"
        delete_type: "role"
        method: "delete"
        base_path: "{{ server_appdata_path }}"

- name: "Save Karakeep Saltbox Facts"
  saltbox_facts:
    role: "karakeep"
    instance: "karakeep"
    keys:
      secret_key: "{{ lookup('ansible.builtin.password', '/dev/null', chars=['ascii_letters', 'digits'], length=36) }}"
    owner: "{{ user.name }}"
    group: "{{ user.name }}"
    base_path: "{{ server_appdata_path }}"
  register: karakeep_saltbox_facts

- name: Chrome role
  ansible.builtin.include_role:
    name: chrome

- name: Meilisearch role
  ansible.builtin.include_role:
    name: meilisearch

- name: Add DNS record
  ansible.builtin.include_tasks: "{{ resources_tasks_path }}/dns/tasker.yml"
  vars:
    dns_record: "{{ lookup('role_var', '_dns_record') }}"
    dns_zone: "{{ lookup('role_var', '_dns_zone') }}"
    dns_proxy: "{{ lookup('role_var', '_dns_proxy') }}"

- name: Remove existing Docker container
  ansible.builtin.include_tasks: "{{ resources_tasks_path }}/docker/remove_docker_container.yml"

- name: Create directories
  ansible.builtin.include_tasks: "{{ resources_tasks_path }}/directories/create_directories.yml"

- name: Create Docker container
  ansible.builtin.include_tasks: "{{ resources_tasks_path }}/docker/create_docker_container.yml"
