#########################################################################
# Title:         Sandbox: Watchower Role                                #
# Author(s):     l3uddz, salty                                          #
# URL:           https://github.com/saltyorg/Sandbox                    #
# --                                                                    #
#########################################################################
#                   GNU General Public License v3.0                     #
#########################################################################
---
- name: Stop and remove any existing container
  community.docker.docker_container:
    name: watchtower
    container_default_behavior: compatibility
    state: absent
    tls_hostname: localhost

- name: Create watchtower directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: "0775"
    owner: "{{ user.name }}"
    group: "{{ user.name }}"
    recurse: yes
  with_items:
    - /opt/watchtower

- name: "Check if watchtower.env file exists"
  ansible.builtin.stat:
    path: "/opt/watchtower/watchtower.env"
  register: watchtower_env

- name: "Import watchtower.env if it doesnt exist"
  ansible.builtin.template:
    src: watchtower.env.j2
    dest: /opt/watchtower/watchtower.env
    force: yes
    owner: "{{ user.name }}"
    group: "{{ user.name }}"
    mode: 0775
  when: not watchtower_env.stat.exists

- name: Create container
  community.docker.docker_container:
    name: watchtower
    image: "containrrr/watchtower"
    pull: yes
    command_handling: compatibility
    container_default_behavior: compatibility
    default_host_ip: ""
    env_file: /opt/watchtower/watchtower.env
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    labels:
      "com.github.saltbox.saltbox_managed": "true"
    network_mode: "saltbox"
    networks_cli_compatible: true
    networks:
      - name: saltbox
        aliases:
          - watchtower
    comparisons:
      '*': ignore
    state: started
    tls_hostname: localhost
    restart_policy: unless-stopped
