##########################################################################
# Title:            Sandbox: Watchtower Role | Default Variables         #
# Author(s):        l3uddz, salty, owine                                 #
# URL:              https://github.com/saltyorg/Sandbox                  #
# --                                                                     #
##########################################################################
#                   GNU General Public License v3.0                      #
##########################################################################
---
################################
# Basics
################################

watchtower_instances: ["watchtower"]

################################
# Settings
################################

watchtower_metrics_enable: false
watchtower_metrics_external: false
watchtower_poll_interval: "43200"

################################
# Paths
################################

watchtower_role_paths_folder: "{{ watchtower_name }}"
watchtower_role_paths_location: "{{ server_appdata_path }}/{{ watchtower_role_paths_folder }}"
watchtower_role_paths_folders_list:
  - "{{ watchtower_role_paths_location }}"

################################
# Web
################################

watchtower_role_web_subdomain: "{{ watchtower_name }}"
watchtower_role_web_domain: "{{ user.domain }}"
watchtower_role_web_port: "8080"
watchtower_host: "{{ lookup('role_var', '_web_subdomain', role='watchtower') + '.' + lookup('role_var', '_web_domain', role='watchtower') }}"

################################
# DNS
################################

watchtower_role_dns_record: "{{ lookup('role_var', '_web_subdomain', role='watchtower') }}"
watchtower_role_dns_zone: "{{ lookup('role_var', '_web_domain', role='watchtower') }}"
watchtower_role_dns_proxy: "{{ dns.proxied }}"

################################
# Traefik
################################

watchtower_role_traefik_sso_middleware: ""
watchtower_role_traefik_middleware_default: "{{ traefik_default_middleware }}"
watchtower_role_traefik_middleware_custom: ""
watchtower_role_traefik_certresolver: "{{ traefik_default_certresolver }}"
watchtower_role_traefik_enabled: "{{ true if (watchtower_metrics_enable and watchtower_metrics_external) else false }}"
watchtower_role_traefik_api_enabled: false
watchtower_role_traefik_api_endpoint: ""

################################
# Docker
################################

# Container
watchtower_role_docker_container: "{{ watchtower_name }}"

# Image
watchtower_role_docker_image_pull: true
watchtower_role_docker_image_repo: "containrrr/watchtower"
watchtower_role_docker_image_tag: "latest"
watchtower_role_docker_image: "{{ lookup('role_var', '_docker_image_repo', role='watchtower') }}:{{ lookup('role_var', '_docker_image_tag', role='watchtower') }}"

# Envs
watchtower_role_docker_envs_default:
  TZ: "{{ tz }}"
  WATCHTOWER_CLEANUP: "true"
  WATCHTOWER_POLL_INTERVAL: "{{ watchtower_poll_interval }}"
  WATCHTOWER_HTTP_API_METRICS: "{{ 'true' if watchtower_metrics_enable else omit }}"
watchtower_role_docker_envs_custom: {}
watchtower_role_docker_envs: "{{ lookup('role_var', '_docker_envs_default', role='watchtower')
                                 | combine(lookup('role_var', '_docker_envs_custom', role='watchtower')) }}"
watchtower_role_docker_env_file: "{{ lookup('role_var', '_paths_location', role='watchtower') + '/watchtower.env' if watchtower_env.stat.exists else omit }}"


# Volumes
watchtower_role_docker_volumes_default:
  - "/var/run/docker.sock:/var/run/docker.sock"
watchtower_role_docker_volumes_custom: []
watchtower_role_docker_volumes: "{{ lookup('role_var', '_docker_volumes_default', role='watchtower')
                                    + lookup('role_var', '_docker_volumes_custom', role='watchtower') }}"

# Hostname
watchtower_role_docker_hostname: "{{ watchtower_name }}"

# Networks
watchtower_role_docker_networks_alias: "{{ watchtower_name }}"
watchtower_role_docker_networks_default: []
watchtower_role_docker_networks_custom: []
watchtower_role_docker_networks: "{{ docker_networks_common
                                     + lookup('role_var', '_docker_networks_default', role='watchtower')
                                     + lookup('role_var', '_docker_networks_custom', role='watchtower') }}"

# Restart Policy
watchtower_role_docker_restart_policy: unless-stopped

# State
watchtower_role_docker_state: started
