#########################################################################
# Title:            Sandbox: Tandoor                                    #
# Author(s):        owine                                               #
# URL:              https://github.com/saltyorg/Sandbox                 #
# --                                                                    #
#########################################################################
#                   GNU General Public License v3.0                     #
#########################################################################
---
- name: "Save Tandoor Saltbox facts"
  saltbox_facts:
    role: "tandoor"
    instance: "tandoor"
    keys:
      secret_key: "{{ tandoor.secret_key
                   if tandoor is defined and tandoor.secret_key is defined and tandoor.secret_key is not none and tandoor.secret_key | length > 0
                   else lookup('ansible.builtin.password', '/dev/null', chars=['ascii_letters', 'digits'], length=50) }}"
    owner: "{{ user.name }}"
    group: "{{ user.name }}"
    base_path: "{{ server_appdata_path }}"
  register: tandoor_saltbox_facts

- name: Remove legacy setting
  ansible.builtin.shell: "yyq -i 'del(.tandoor)' {{ playbook_dir }}/settings.yml"
  when: tandoor is defined

- name: "Import Postgres Role"
  ansible.builtin.include_role:
    name: postgres
  vars:
    postgres_instances: ["{{ lookup('role_var', '_postgres_name', role='tandoor') }}"]
    postgres_role_docker_image_tag: "{{ lookup('role_var', '_postgres_docker_image_tag', role='tandoor') }}"
    postgres_role_docker_image_repo: "{{ lookup('role_var', '_postgres_docker_image_repo', role='tandoor') }}"
    postgres_role_paths_folder: "{{ lookup('role_var', '_postgres_paths_folder', role='tandoor') }}"
    postgres_role_paths_location: "{{ lookup('role_var', '_postgres_paths_location', role='tandoor') }}"
    postgres_role_docker_env_db: "{{ lookup('role_var', '_postgres_docker_env_db', role='tandoor') }}"
    postgres_role_docker_healthcheck: "{{ lookup('role_var', '_postgres_docker_healthcheck', role='tandoor') }}"
  when: lookup('role_var', '_postgres_deploy', role='tandoor')

- name: Add DNS record
  ansible.builtin.include_tasks: "{{ resources_tasks_path }}/dns/tasker.yml"
  vars:
    dns_record: "{{ lookup('role_var', '_dns_record') }}"
    dns_zone: "{{ lookup('role_var', '_dns_zone') }}"
    dns_proxy: "{{ lookup('role_var', '_dns_proxy') }}"

- name: Remove existing Docker container
  ansible.builtin.include_tasks: "{{ resources_tasks_path }}/docker/remove_docker_container.yml"

- name: Create directories
  ansible.builtin.include_tasks: "{{ resources_tasks_path }}/directories/create_directories.yml"

- name: Create Docker container
  ansible.builtin.include_tasks: "{{ resources_tasks_path }}/docker/create_docker_container.yml"
