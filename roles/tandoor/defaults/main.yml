##########################################################################
# Title:         Sandbox: Tandoor | Default Variables                    #
# Author(s):     owine                                                   #
# URL:           https://github.com/saltyorg/Sandbox                     #
# --                                                                     #
##########################################################################
#                   GNU General Public License v3.0                      #
##########################################################################
---
################################
# Basics
################################

tandoor_name: tandoor

################################
# Settings
################################

tandoor_role_postgres_deploy: true
tandoor_role_postgres_name: "{{ tandoor_name }}-postgres"
tandoor_role_postgres_user: "{{ postgres_role_docker_env_user }}"
tandoor_role_postgres_password: "{{ postgres_role_docker_env_password }}"
tandoor_role_postgres_docker_env_db: "{{ tandoor_name }}"
tandoor_role_postgres_docker_image_tag: "17-alpine"
tandoor_role_postgres_docker_image_repo: "postgres"
tandoor_role_postgres_docker_healthcheck:
  test: ["CMD-SHELL", "pg_isready -d {{ lookup('role_var', '_postgres_docker_env_db', role='tandoor') }} -U {{ postgres_role_docker_env_user }}"]
  start_period: 20s
  interval: 30s
  retries: 5
  timeout: 5s
tandoor_role_postgres_paths_folder: "{{ tandoor_name }}"
tandoor_role_postgres_paths_location: "{{ server_appdata_path }}/{{ tandoor_role_postgres_paths_folder }}/postgres"

################################
# Paths
################################

tandoor_role_paths_folder: "{{ tandoor_name }}"
tandoor_role_paths_location: "{{ server_appdata_path }}/{{ tandoor_role_paths_folder }}"
tandoor_role_paths_folders_list:
  - "{{ tandoor_role_paths_location }}"
  - "{{ tandoor_role_paths_location }}/staticfiles"
  - "{{ tandoor_role_paths_location }}/mediafiles"

################################
# Web
################################

tandoor_role_web_subdomain: "{{ tandoor_name }}"
tandoor_role_web_domain: "{{ user.domain }}"
tandoor_role_web_port: "8080"
tandoor_role_web_url: "{{ 'https://' + (lookup('role_var', '_web_subdomain', role='tandoor') + '.' + lookup('role_var', '_web_domain', role='tandoor')
                       if (lookup('role_var', '_web_subdomain', role='tandoor') | length > 0)
                       else lookup('role_var', '_web_domain', role='tandoor')) }}"

################################
# DNS
################################

tandoor_role_dns_record: "{{ lookup('role_var', '_web_subdomain', role='tandoor') }}"
tandoor_role_dns_zone: "{{ lookup('role_var', '_web_domain', role='tandoor') }}"
tandoor_role_dns_proxy: "{{ dns.proxied }}"

################################
# Traefik
################################

tandoor_role_traefik_sso_middleware: "{{ traefik_default_sso_middleware }}"
tandoor_role_traefik_middleware_default: "{{ traefik_default_middleware }}"
tandoor_role_traefik_middleware_custom: ""
tandoor_role_traefik_certresolver: "{{ traefik_default_certresolver }}"
tandoor_role_traefik_enabled: true
tandoor_role_traefik_api_enabled: false
tandoor_role_traefik_api_endpoint: ""

################################
# Docker
################################

# Container
tandoor_role_docker_container: "{{ tandoor_name }}"

# Image
tandoor_role_docker_image_pull: true
tandoor_role_docker_image_tag: "latest"
tandoor_role_docker_image_repo: "vabene1111/recipes"
tandoor_role_docker_image: "{{ lookup('role_var', '_docker_image_repo', role='tandoor') }}:{{ lookup('role_var', '_docker_image_tag', role='tandoor') }}"

# Envs
tandoor_role_docker_envs_default:
  TZ: "{{ tz }}"
  SECRET_KEY: "{{ tandoor_saltbox_facts.facts.secret_key }}"
  DB_ENGINE: "django.db.backends.postgresql"
  POSTGRES_HOST: "{{ lookup('role_var', '_postgres_name', role='tandoor') }}"
  POSTGRES_PORT: "5432"
  POSTGRES_USER: "{{ lookup('role_var', '_postgres_user', role='tandoor') }}"
  POSTGRES_PASSWORD: "{{ lookup('role_var', '_postgres_password', role='tandoor') }}"
  POSTGRES_DB: "{{ lookup('role_var', '_postgres_docker_env_db', role='tandoor') }}"
  DEBUG: "0"
  GUNICORN_MEDIA: "1"
  REMOTE_USER_AUTH: "1"
tandoor_role_docker_envs_custom: {}
tandoor_role_docker_envs: "{{ lookup('role_var', '_docker_envs_default', role='tandoor')
                              | combine(lookup('role_var', '_docker_envs_custom', role='tandoor')) }}"

# Volumes
tandoor_role_docker_volumes_default:
  - "{{ lookup('role_var', '_paths_location', role='tandoor') }}/staticfiles:/opt/recipes/staticfiles"
  - "{{ lookup('role_var', '_paths_location', role='tandoor') }}/mediafiles:/opt/recipes/mediafiles"
tandoor_role_docker_volumes_custom: []
tandoor_role_docker_volumes: "{{ lookup('role_var', '_docker_volumes_default', role='tandoor')
                                 + lookup('role_var', '_docker_volumes_custom', role='tandoor') }}"

# Hostname
tandoor_role_docker_hostname: "{{ tandoor_name }}"

# Networks
tandoor_role_docker_networks_alias: "{{ tandoor_name }}"
tandoor_role_docker_networks_default: []
tandoor_role_docker_networks_custom: []
tandoor_role_docker_networks: "{{ docker_networks_common
                                  + lookup('role_var', '_docker_networks_default', role='tandoor')
                                  + lookup('role_var', '_docker_networks_custom', role='tandoor') }}"

# Restart Policy
tandoor_role_docker_restart_policy: unless-stopped

# State
tandoor_role_docker_state: started

# Dependencies
tandoor_role_depends_on: "{{ lookup('role_var', '_postgres_name', role='tandoor') }}"
tandoor_role_depends_on_delay: "0"
tandoor_role_depends_on_healthchecks: "false"
