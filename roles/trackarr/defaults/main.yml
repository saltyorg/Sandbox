##########################################################################
# Title:         Sandbox: Trackarr | Default Variables                   #
# Author(s):     desimaniac, salty                                       #
# URL:           https://github.com/saltyorg/Sandbox                     #
# --                                                                     #
##########################################################################
#                   GNU General Public License v3.0                      #
##########################################################################
---
################################
# Basics
################################

trackarr_name: trackarr

################################
# Paths
################################

trackarr_role_paths_folder: "{{ trackarr_name }}"
trackarr_role_paths_location: "{{ server_appdata_path }}/{{ trackarr_role_paths_folder }}"
trackarr_role_paths_config_location: "{{ trackarr_role_paths_location }}/config.yaml"
trackarr_role_paths_folders_list:
  - "{{ trackarr_role_paths_location }}"

################################
# Web
################################

trackarr_role_web_subdomain: "{{ trackarr_name }}"
trackarr_role_web_domain: "{{ user.domain }}"
trackarr_role_web_port: "7337"
trackarr_role_web_url: "{{ 'https://' + (lookup('role_var', '_web_subdomain', role='trackarr') + '.' + lookup('role_var', '_web_domain', role='trackarr')
                        if (lookup('role_var', '_web_subdomain', role='trackarr') | length > 0)
                        else lookup('role_var', '_web_domain', role='trackarr')) }}"

################################
# DNS
################################

trackarr_role_dns_record: "{{ lookup('role_var', '_web_subdomain', role='trackarr') }}"
trackarr_role_dns_zone: "{{ lookup('role_var', '_web_domain', role='trackarr') }}"
trackarr_role_dns_proxy: "{{ dns_proxied }}"

################################
# Traefik
################################

trackarr_role_traefik_sso_middleware: "{{ traefik_default_sso_middleware }}"
trackarr_role_traefik_middleware_default: "{{ traefik_default_middleware }}"
trackarr_role_traefik_middleware_custom: ""
trackarr_role_traefik_certresolver: "{{ traefik_default_certresolver }}"
trackarr_role_traefik_enabled: true
trackarr_role_traefik_api_enabled: false
trackarr_role_traefik_api_endpoint: ""

################################
# API
################################

# default to blank
trackarr_server_apikey:

################################
# Docker
################################

# Container
trackarr_role_docker_container: "{{ trackarr_name }}"

# Image
trackarr_role_docker_image_pull: true
trackarr_role_docker_image_repo: "cloudb0x/trackarr"
trackarr_role_docker_image_tag: "latest"
trackarr_role_docker_image: "{{ lookup('role_var', '_docker_image_repo', role='trackarr') }}:{{ lookup('role_var', '_docker_image_tag', role='trackarr') }}"

# Envs
trackarr_role_docker_envs_log_level: "1"
trackarr_role_docker_envs_default:
  PUID: "{{ uid }}"
  PGID: "{{ gid }}"
  TZ: "{{ tz }}"
  VERBOSE: "{{ lookup('role_var', '_docker_envs_log_level', role='trackarr') }}"
trackarr_role_docker_envs_custom: {}
trackarr_role_docker_envs: "{{ lookup('role_var', '_docker_envs_default', role='trackarr')
                               | combine(lookup('role_var', '_docker_envs_custom', role='trackarr')) }}"

# Volumes
trackarr_role_docker_volumes_default:
  - "{{ lookup('role_var', '_paths_location', role='trackarr') }}:/config"
trackarr_role_docker_volumes_custom: []
trackarr_role_docker_volumes: "{{ lookup('role_var', '_docker_volumes_default', role='trackarr')
                                  + lookup('role_var', '_docker_volumes_custom', role='trackarr') }}"

# Hostname
trackarr_role_docker_hostname: "{{ trackarr_name }}"

# Networks
trackarr_role_docker_networks_alias: "{{ trackarr_name }}"
trackarr_role_docker_networks_default: []
trackarr_role_docker_networks_custom: []
trackarr_role_docker_networks: "{{ docker_networks_common
                                   + lookup('role_var', '_docker_networks_default', role='trackarr')
                                   + lookup('role_var', '_docker_networks_custom', role='trackarr') }}"

# Restart Policy
trackarr_role_docker_restart_policy: unless-stopped

# State
trackarr_role_docker_state: started
