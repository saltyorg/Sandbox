#########################################################################
# Title:            Sandbox: SQLitebrowser                              #
# Author(s):        owine                                               #
# URL:              https://github.com/saltyorg/Sandbox                 #
# --                                                                    #
#########################################################################
#                   GNU General Public License v3.0                     #
#########################################################################
---
################################
# Basics
################################

sqlitebrowser_name: sqlitebrowser

################################
# Paths
################################

sqlitebrowser_paths_folder: "{{ sqlitebrowser_name }}"
sqlitebrowser_paths_location: "{{ server_appdata_path }}/{{ sqlitebrowser_paths_folder }}"
sqlitebrowser_paths_folders_list:
  - "{{ sqlitebrowser_paths_location }}"

################################
# Web
################################

sqlitebrowser_web_subdomain: "{{ sqlitebrowser_name }}"
sqlitebrowser_web_domain: "{{ user.domain }}"
sqlitebrowser_web_port: "3000"
sqlitebrowser_web_url: "{{ 'https://' + sqlitebrowser_web_subdomain + '.' + sqlitebrowser_web_domain }}"

################################
# DNS
################################

sqlitebrowser_dns_record: "{{ sqlitebrowser_web_subdomain }}"
sqlitebrowser_dns_zone: "{{ sqlitebrowser_web_domain }}"
sqlitebrowser_dns_proxy: "{{ dns.proxied }}"

################################
# Traefik
################################

sqlitebrowser_traefik_sso_middleware: "{{ traefik_default_sso_middleware }}"
sqlitebrowser_traefik_middleware_default: "{{ traefik_default_middleware + ','
                                              + lookup('vars', sqlitebrowser_name + '_traefik_sso_middleware', default=sqlitebrowser_traefik_sso_middleware)
                                           if (lookup('vars', sqlitebrowser_name + '_traefik_sso_middleware', default=sqlitebrowser_traefik_sso_middleware) | length > 0)
                                           else traefik_default_middleware }}"
sqlitebrowser_traefik_middleware_custom: ""
sqlitebrowser_traefik_middleware: "{{ sqlitebrowser_traefik_middleware_default + ','
                                      + sqlitebrowser_traefik_middleware_custom
                                   if (not sqlitebrowser_traefik_middleware_custom.startswith(',') and sqlitebrowser_traefik_middleware_custom | length > 0)
                                   else sqlitebrowser_traefik_middleware_default
                                      + sqlitebrowser_traefik_middleware_custom }}"
sqlitebrowser_traefik_certresolver: "{{ traefik_default_certresolver }}"
sqlitebrowser_traefik_enabled: true
sqlitebrowser_traefik_error_pages_enabled: false

################################
# Docker
################################

# Container
sqlitebrowser_docker_container: "{{ sqlitebrowser_name }}"

# Image
sqlitebrowser_docker_image_pull: true
sqlitebrowser_docker_image_tag: "latest"
sqlitebrowser_docker_image: "lscr.io/linuxserver/sqlitebrowser:{{ sqlitebrowser_docker_image_tag }}"

# Ports
sqlitebrowser_docker_ports_defaults: []
sqlitebrowser_docker_ports_custom: []
sqlitebrowser_docker_ports: "{{ sqlitebrowser_docker_ports_defaults
                                + sqlitebrowser_docker_ports_custom }}"

# Envs
sqlitebrowser_docker_envs_default:
  TZ: "{{ tz }}"
  PUID: "{{ uid }}"
  PGID: "{{ gid }}"
sqlitebrowser_docker_envs_custom: {}
sqlitebrowser_docker_envs: "{{ sqlitebrowser_docker_envs_default
                               | combine(sqlitebrowser_docker_envs_custom) }}"

# Commands
sqlitebrowser_docker_commands_default: []
sqlitebrowser_docker_commands_custom: []
sqlitebrowser_docker_commands: "{{ sqlitebrowser_docker_commands_default
                                   + sqlitebrowser_docker_commands_custom }}"

# Volumes
sqlitebrowser_docker_volumes_default:
  - "{{ sqlitebrowser_paths_location }}:/config"
sqlitebrowser_docker_volumes_custom: []
sqlitebrowser_docker_volumes: "{{ sqlitebrowser_docker_volumes_default
                                  + sqlitebrowser_docker_volumes_custom }}"

# Devices
sqlitebrowser_docker_devices_default: []
sqlitebrowser_docker_devices_custom: []
sqlitebrowser_docker_devices: "{{ sqlitebrowser_docker_devices_default
                                  + sqlitebrowser_docker_devices_custom }}"

# Hosts
sqlitebrowser_docker_hosts_default: []
sqlitebrowser_docker_hosts_custom: []
sqlitebrowser_docker_hosts: "{{ docker_hosts_common
                                | combine(sqlitebrowser_docker_hosts_default)
                                | combine(sqlitebrowser_docker_hosts_custom) }}"

# Labels
sqlitebrowser_docker_labels_default: {}
sqlitebrowser_docker_labels_custom: {}
sqlitebrowser_docker_labels: "{{ docker_labels_common
                                 | combine(sqlitebrowser_docker_labels_default)
                                 | combine(sqlitebrowser_docker_labels_custom) }}"

# Hostname
sqlitebrowser_docker_hostname: "{{ sqlitebrowser_name }}"

# Networks
sqlitebrowser_docker_networks_alias: "{{ sqlitebrowser_name }}"
sqlitebrowser_docker_networks_default: []
sqlitebrowser_docker_networks_custom: []
sqlitebrowser_docker_networks: "{{ docker_networks_common
                                   + sqlitebrowser_docker_networks_default
                                   + sqlitebrowser_docker_networks_custom }}"

# Capabilities
sqlitebrowser_docker_capabilities_default: []
sqlitebrowser_docker_capabilities_custom: []
sqlitebrowser_docker_capabilities: "{{ sqlitebrowser_docker_capabilities_default
                                       + sqlitebrowser_docker_capabilities_custom }}"

# Security Opts
sqlitebrowser_docker_security_opts_default: []
sqlitebrowser_docker_security_opts_custom: []
sqlitebrowser_docker_security_opts: "{{ sqlitebrowser_docker_security_opts_default
                                        + sqlitebrowser_docker_security_opts_custom }}"

# Restart Policy
sqlitebrowser_docker_restart_policy: unless-stopped

# State
sqlitebrowser_docker_state: started
