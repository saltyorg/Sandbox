##########################################################################
# Title:            Sandbox: audiobookshelf   | Default Variables        #
# Author(s):        kowalski                                             #
# URL:              https://github.com/saltyorg/Sandbox                  #
# --                                                                     #
##########################################################################
#                   GNU General Public License v3.0                      #
##########################################################################
---
################################
# Basics
################################

audiobookshelf_name: audiobookshelf

################################
# Paths
################################

audiobookshelf_paths_folder: "{{ audiobookshelf_name }}"
audiobookshelf_paths_location: "{{ server_appdata_path }}/{{ audiobookshelf_paths_folder }}"
audiobookshelf_paths_folders_list:
  - "{{ audiobookshelf_paths_location }}"
  - "{{ audiobookshelf_paths_location }}/config"
  - "{{ audiobookshelf_paths_location }}/metadata"

################################
# Web
################################

audiobookshelf_web_subdomain: "{{ audiobookshelf_name }}"
audiobookshelf_web_domain: "{{ user.domain }}"
audiobookshelf_web_port: "80"
audiobookshelf_web_url: "{{ 'https://' + audiobookshelf_web_subdomain + dns_record_suffix + '.' + audiobookshelf_web_domain
                         if (reverse_proxy_is_enabled)
                         else 'http://localhost:' + audiobookshelf_web_port }}"

################################
# DNS
################################

audiobookshelf_dns_record: "{{ audiobookshelf_web_subdomain }}"
audiobookshelf_dns_zone: "{{ audiobookshelf_web_domain }}"

################################
# Traefik
################################

audiobookshelf_traefik_sso_middleware: "{{ traefik_default_sso_middleware }}"
audiobookshelf_traefik_middleware: "{{ traefik_default_middleware + ',' + audiobookshelf_traefik_sso_middleware
                                    if (audiobookshelf_traefik_sso_middleware | length > 0)
                                    else traefik_default_middleware }}"
audiobookshelf_traefik_certresolver: "{{ traefik_default_certresolver }}"
audiobookshelf_traefik_enabled: true

################################
# Docker
################################

# Container
audiobookshelf_docker_container: "{{ audiobookshelf_name }}"

# Image
audiobookshelf_docker_image_pull: true
audiobookshelf_docker_image_tag: "latest"
audiobookshelf_docker_image: "ghcr.io/advplyr/audiobookshelf:{{ audiobookshelf_docker_image_tag }}"

# Ports
audiobookshelf_docker_ports_defaults:
  - "{{ audiobookshelf_web_port }}"
audiobookshelf_docker_ports_custom: []
audiobookshelf_docker_ports: "{{ audiobookshelf_docker_ports_defaults
                                 + audiobookshelf_docker_ports_custom
                              if (not reverse_proxy_is_enabled)
                              else [] + audiobookshelf_docker_ports_custom }}"

# Envs
audiobookshelf_docker_envs_default:
  AUDIOBOOKSHELF_UID: "{{ uid }}"
  AUDIOBOOKSHELF_GID: "{{ gid }}"
  TZ: "{{ tz }}"
audiobookshelf_docker_envs_custom: {}
audiobookshelf_docker_envs: "{{ audiobookshelf_docker_envs_default
                                | combine(audiobookshelf_docker_envs_custom) }}"

# Commands
audiobookshelf_docker_commands_default: []
audiobookshelf_docker_commands_custom: []
audiobookshelf_docker_commands: "{{ audiobookshelf_docker_commands_default
                                    + audiobookshelf_docker_commands_custom}}"

# Volumes
audiobookshelf_docker_volumes_default:
  - "{{ audiobookshelf_paths_location }}/config:/config"
  - "{{ audiobookshelf_paths_location }}/metadata:/metadata"
  - "/mnt/unionfs/Media/audiobooks:/audiobooks"
  - "/mnt/unionfs/Media/podcasts:/podcasts"
  # - "/mnt:/mnt"
audiobookshelf_docker_volumes_custom: []
audiobookshelf_docker_volumes: "{{ lookup('vars', audiobookshelf_name + '_docker_volumes_default', default=audiobookshelf_docker_volumes_default)
                                   + lookup('vars', audiobookshelf_name + '_docker_volumes_custom', default=audiobookshelf_docker_volumes_custom) }}"

# Devices
audiobookshelf_docker_devices_default: []
audiobookshelf_docker_devices_custom: []
audiobookshelf_docker_devices: "{{ audiobookshelf_docker_devices_default
                                   + audiobookshelf_docker_devices_custom }}"

# Hosts
audiobookshelf_docker_hosts_default: []
audiobookshelf_docker_hosts_custom: []
audiobookshelf_docker_hosts: "{{ docker_hosts_common
                                 | combine(audiobookshelf_docker_hosts_default)
                                 | combine(audiobookshelf_docker_hosts_custom) }}"

# Labels
audiobookshelf_docker_labels_default: {}
audiobookshelf_docker_labels_custom: {}
audiobookshelf_docker_labels: "{{ docker_labels_common
                                  | combine(audiobookshelf_docker_labels_default)
                                  | combine(audiobookshelf_docker_labels_custom) }}"

# Hostname
audiobookshelf_docker_hostname: "{{ audiobookshelf_name }}"

# Networks
audiobookshelf_docker_networks_alias: "{{ audiobookshelf_name }}"
audiobookshelf_docker_networks_default: []
audiobookshelf_docker_networks_custom: []
audiobookshelf_docker_networks: "{{ docker_networks_common
                                    + audiobookshelf_docker_networks_default
                                    + audiobookshelf_docker_networks_custom }}"

# Capabilities
audiobookshelf_docker_capabilities_default: []
audiobookshelf_docker_capabilities_custom: []
audiobookshelf_docker_capabilities: "{{ audiobookshelf_docker_capabilities_default
                                        + audiobookshelf_docker_capabilities_custom }}"

# Security Opts
audiobookshelf_docker_security_opts_default: []
audiobookshelf_docker_security_opts_custom: []
audiobookshelf_docker_security_opts: "{{ audiobookshelf_docker_security_opts_default
                                         + audiobookshelf_docker_security_opts_custom }}"

# Restart Policy
audiobookshelf_docker_restart_policy: unless-stopped

# State
audiobookshelf_docker_state: started
