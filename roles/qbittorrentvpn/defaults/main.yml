#########################################################################
# Title:            Saltbox: qbittorrentvpn                             #
# Author(s):        salty                                               #
# URL:              https://github.com/saltyorg/Saltbox                 #
#########################################################################
#                   GNU General Public License v3.0                     #
#########################################################################
---
################################
# Basics
################################

qbittorrentvpn_instances: ["qbittorrentvpn"]

################################
# Settings
################################

qbittorrentvpn_log_level_daemon: info
qbittorrentvpn_log_level_web: info
qbittorrentvpn_name_servers: "84.200.69.80,1.1.1.1,84.200.70.40,1.0.0.1"
qbittorrentvpn_lan_network: "172.19.0.0/16"

################################
# Paths
################################

qbittorrentvpn_role_paths_folder: "{{ qbittorrentvpn_name }}"
qbittorrentvpn_role_paths_location: "{{ server_appdata_path }}/{{ qbittorrentvpn_role_paths_folder }}"
qbittorrentvpn_role_paths_downloads_location: "{{ downloads_torrents_path }}/{{ qbittorrentvpn_role_paths_folder }}"
qbittorrentvpn_role_paths_conf: "{{ qbittorrentvpn_role_paths_location }}/qBittorrent/config/qBittorrent.conf"
qbittorrentvpn_role_paths_folders_list:
  - "{{ qbittorrentvpn_role_paths_location }}"
  - "{{ qbittorrentvpn_role_paths_location }}/wireguard"
  - "{{ qbittorrentvpn_role_paths_downloads_location }}"
  - "{{ qbittorrentvpn_role_paths_downloads_location }}/completed"
  - "{{ qbittorrentvpn_role_paths_downloads_location }}/incoming"
  - "{{ qbittorrentvpn_role_paths_downloads_location }}/watched"
  - "{{ qbittorrentvpn_role_paths_downloads_location }}/torrents"

################################
# Web
################################

qbittorrentvpn_role_web_subdomain: "{{ qbittorrentvpn_name }}"
qbittorrentvpn_role_web_domain: "{{ user.domain }}"
qbittorrentvpn_role_web_port: "8080"
qbittorrentvpn_role_web_url: "{{ 'https://' + (lookup('role_var', '_web_subdomain', role='qbittorrentvpn') + '.' + lookup('role_var', '_web_domain', role='qbittorrentvpn')
                              if (lookup('role_var', '_web_subdomain', role='qbittorrentvpn') | length > 0)
                              else lookup('role_var', '_web_domain', role='qbittorrentvpn')) }}"

################################
# DNS
################################

qbittorrentvpn_role_dns_record: "{{ lookup('role_var', '_web_subdomain', role='qbittorrentvpn') }}"
qbittorrentvpn_role_dns_zone: "{{ lookup('role_var', '_web_domain', role='qbittorrentvpn') }}"
qbittorrentvpn_role_dns_proxy: "{{ dns.proxied }}"

################################
# Traefik
################################

qbittorrentvpn_role_traefik_sso_middleware: "{{ traefik_default_sso_middleware }}"
qbittorrentvpn_role_traefik_middleware_default: "{{ traefik_default_middleware }}"
qbittorrentvpn_role_traefik_middleware_custom: ""
qbittorrentvpn_role_traefik_certresolver: "{{ traefik_default_certresolver }}"
qbittorrentvpn_role_traefik_enabled: true
qbittorrentvpn_role_traefik_api_enabled: true
qbittorrentvpn_role_traefik_api_endpoint: "PathPrefix(`/api`) || PathPrefix(`/command`) || PathPrefix(`/query`) || PathPrefix(`/login`) || PathPrefix(`/sync`)"

################################
# Docker
################################

# Container
qbittorrentvpn_role_docker_container: "{{ qbittorrentvpn_name }}"

# Image
qbittorrentvpn_role_docker_image_pull: true
qbittorrentvpn_role_docker_image_repo: "binhex/arch-qbittorrentvpn"
qbittorrentvpn_role_docker_image_tag: "latest"
qbittorrentvpn_role_docker_image: "{{ lookup('role_var', '_docker_image_repo', role='qbittorrentvpn') }}:{{ lookup('role_var', '_docker_image_tag', role='qbittorrentvpn') }}"

# Envs
qbittorrentvpn_role_docker_envs_default:
  PUID: "{{ uid }}"
  PGID: "{{ gid }}"
  TZ: "{{ tz }}"
  UMASK_SET: "002"
  VPN_ENABLED: "yes"
  VPN_USER: "{{ qbittorrentvpn.vpn_user | default('username', true) }}"
  VPN_PASS: "{{ qbittorrentvpn.vpn_pass | default('password', true) }}"
  VPN_PROV: "{{ qbittorrentvpn.vpn_prov | default('pia', true) }}"
  VPN_CLIENT: "{{ qbittorrentvpn.vpn_client | default('wireguard', true) }}"
  STRICT_PORT_FORWARD: "yes"
  ENABLE_PRIVOXY: "no"
  LAN_NETWORK: "{{ qbittorrentvpn_lan_network }}"
  NAME_SERVERS: "{{ qbittorrentvpn_name_servers }}"
qbittorrentvpn_role_docker_envs_custom: {}
qbittorrentvpn_role_docker_envs: "{{ lookup('role_var', '_docker_envs_default', role='qbittorrentvpn')
                                     | combine(lookup('role_var', '_docker_envs_custom', role='qbittorrentvpn')) }}"

# Volumes
qbittorrentvpn_role_docker_volumes_default:
  - "{{ lookup('role_var', '_paths_location', role='qbittorrentvpn') }}:/config"
  - "{{ server_appdata_path }}/scripts:/scripts"
qbittorrentvpn_role_docker_volumes_custom: []
qbittorrentvpn_role_docker_volumes: "{{ lookup('role_var', '_docker_volumes_default', role='qbittorrentvpn')
                                        + lookup('role_var', '_docker_volumes_custom', role='qbittorrentvpn') }}"

# Hostname
qbittorrentvpn_role_docker_hostname: "{{ qbittorrentvpn_name }}"

# Networks
qbittorrentvpn_role_docker_networks_alias: "{{ qbittorrentvpn_name }}"
qbittorrentvpn_role_docker_networks_default: []
qbittorrentvpn_role_docker_networks_custom: []
qbittorrentvpn_role_docker_networks: "{{ docker_networks_common
                                         + lookup('role_var', '_docker_networks_default', role='qbittorrentvpn')
                                         + lookup('role_var', '_docker_networks_custom', role='qbittorrentvpn') }}"

# Capabilities
qbittorrentvpn_role_docker_capabilities_default:
  - NET_ADMIN
qbittorrentvpn_role_docker_capabilities_custom: []
qbittorrentvpn_role_docker_capabilities: "{{ lookup('role_var', '_docker_capabilities_default', role='qbittorrentvpn')
                                             + lookup('role_var', '_docker_capabilities_custom', role='qbittorrentvpn') }}"

# Sysctls
qbittorrentvpn_role_docker_sysctls:
  net.ipv4.conf.all.src_valid_mark: "1"

# Restart Policy
qbittorrentvpn_role_docker_restart_policy: unless-stopped

# Stop Timeout
qbittorrentvpn_role_docker_stop_timeout: 900

# State
qbittorrentvpn_role_docker_state: started

# Privileged
qbittorrentvpn_role_docker_privileged: true
