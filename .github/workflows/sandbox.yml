name: CI

on:
  push:
    paths-ignore:
      - '.github/**'
      - '*.md'
      - '.gitignore'
      - 'roles/settings/**'
  pull_request:
    paths-ignore:
      - '*.md'
      - '.gitignore'
      - 'roles/settings/**'
  workflow_dispatch:

jobs:
  find-roles:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v2
      - id: set-matrix
        run: OUTPUT=$(awk -F'[][]' -e '/ role:/ && FNR > 13' sandbox.yml | awk '!/#/' | awk -F'[][]' '{print $2}' | tr '\n' ',' | sed 's/,*$//' | sed "s/.\(roles\|hetzner_nfs_server_uninstall\|hetzner_nfs_client_mount\|hetzner_nfs_client_unmount\).,//g") && echo "::set-output name=matrix::{\"roles\":[$OUTPUT]}"

  install:
    name: '${{ matrix.roles }}'
    needs: find-roles
    runs-on: ubuntu-20.04
    strategy:
      matrix: ${{fromJson(needs.find-roles.outputs.matrix)}}
      fail-fast: false

    steps:
      - uses: actions/checkout@v2

      - name: Install Dependencies
        run: curl https://raw.githubusercontent.com/saltyorg/sb/master/sb_install.sh --output sb_install.sh && sudo bash sb_install.sh -v

      - name: Chown /srv/git
        run: sudo chown -R runner:runner /srv/git

      - name: Edit accounts.yml
        run: cd /srv/git/saltbox && sed -i 's/seed/runner/g' accounts.yml

      - name: Create, chown and chmod /tmp/ansible
        run: sudo mkdir /tmp/ansible && sudo chown -R runner:runner /tmp/ansible && chmod 0777 /tmp/ansible

      - name: Syntax Check
        run: cd /srv/git/saltbox && sudo ansible-playbook saltbox.yml --syntax-check

      - name: Install Saltbox
        run: cd /srv/git/saltbox && sudo ansible-playbook saltbox.yml --tags "core" --skip-tags "sanity_check,settings" --extra-vars '{"continuous_integration":true}'

      - name: Copy default configuration
        run: cp -n defaults/ansible.cfg.default ansible.cfg && cp -n defaults/settings.yml.default settings.yml

      - name: Install ${{ matrix.roles }}
        run: sudo ansible-playbook sandbox.yml --tags "${{ matrix.roles }}" --skip-tags "sanity_check,settings" --extra-vars '{"continuous_integration":true}'

  webhook:
    name: 'webhook'
    runs-on: ubuntu-20.04
    needs: install
    if: always()
    steps:
      - uses: technote-space/workflow-conclusion-action@v2
      - uses: sarisia/actions-status-discord@v1
        if: always()
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          status: ${{ env.WORKFLOW_CONCLUSION }}
